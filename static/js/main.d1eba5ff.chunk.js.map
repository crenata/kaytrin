{"version":3,"sources":["helpers/RouteElement.js","configs/Config.js","contexts/Web3Context.js","helpers/loadings/Loading.js","images/logo.svg","helpers/IsEmpty.js","helpers/texts/TextNeon.js","helpers/texts/TextGlow.js","template/Navbar.js","template/Template.js","pages/NotFound.js","configs/FirebaseConfig.js","helpers/IsEmail.js","helpers/backgrounds/BgForest.js","helpers/errors/ErrorNotDeployed.js","pages/Home.js","AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["RouteElement","RouteComponent","component","props","location","useLocation","navigate","useNavigate","Config","Routers","NotFound","Home","Teams","Index","Havea","Links","Web3Context","React","createContext","loading","web3","newBlockHeadersSubscription","account","primaryBalance","kaytrin","loadWeb3","Loading","className","PureComponent","IsEmpty","data","Array","isArray","length","trim","TextNeon","size1","this","size","size2","size3","size4","size5","size6","size7","style","textShadow","color","WebkitAnimation","MozAnimation","animation","children","TextGlow","size8","Navbar","Consumer","web3Context","to","src","logo","alt","width","height","onClick","Identicon","toString","Template","TransitionGroup","CSSTransition","timeout","classNames","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","IsEmail","test","BgForest","from","map","value","index","array","ErrorNotDeployed","contract","error","console","contractName","params","URLSearchParams","window","search","get","filter","perPage","parseInt","page","thirtyMinutesInMillis","statuses","zero","first","second","third","fourth","state","collection","limit","listener","canSeeOutput","editing","deleting","modalDetail","modalAdd","query","dataDetail","id","domain","status","start_crunch","end_crunch","last_crunch","output","updated_at","seconds","nanoseconds","lastData","add","email","addError","edit","editError","delete","deleteError","getDatabase","prevProps","prevState","snapshot","Date","now","Timestamp","toMillis","isSleep","Promise","resolve","reject","setState","context","alert","deployed","then","exec","call","result","catch","finally","setValue","name","callback","verifyOwner","setTimeout","goto","document","createElement","href","replace","target","click","remove","errorEmail","errorDomain","errorStartCrunch","errorEndCrunch","errorLastCrunch","getDoc","doc","getLastData","setDoc","updateDoc","deleteDoc","getData","queryWhere","where","fromMillis","queryOrderBy","orderBy","queryStart","startAt","startAfter","queryString","getDocs","docs","onSnapshot","snapshotListener","find","message","event","newPage","update","$set","generateQuery","substring","Modal","show","onHide","Body","valign","getStatusText","LoadingButton","variant","seeOutput","Collapse","in","TextField","type","label","onChange","LinearProgress","FormControl","sx","minWidth","InputLabel","Select","labelId","autoWidth","MenuItem","onPageChange","awake","disabled","TablePagination","count","rowsPerPage","onRowsPerPageChange","onRowPerPageChange","contextType","AppRoutes","path","element","App","initialState","bind","setLoading","ethereum","Web3","currentProvider","enable","accounts","getAccounts","getListeners","errorGettingAccounts","request","method","getPrimaryBalance","eth","getBalance","balance","getBlockchainData","on","chainId","subscribe","blockHeader","subscriptionId","listenAccountChanges","listenChainChanges","listenNewBlockHeaders","loadKaytrin","TruffleContract","Kaytrin","setProvider","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1eba5ff.chunk.js","sourcesContent":["import React from \"react\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\nconst RouteElement = ({component: RouteComponent, ...props}) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    return <RouteComponent {...props} location={location} navigate={navigate} />;\n};\n\nexport default RouteElement;","const Config = {\n    Routers: {\n        NotFound: \"*\",\n        Home: \"//*\",\n        Teams: {\n            Index: \"teams\",\n            Havea: \"havea\",\n        }\n    },\n    Links: {\n        Home: \"/\",\n        Teams: {\n            Index: \"/teams\",\n            Havea: \"/teams/havea\",\n        }\n    }\n};\n\nexport default Config;","import React from \"react\";\n\nconst Web3Context = React.createContext({\n    loading: true,\n    web3: null,\n    newBlockHeadersSubscription: null,\n    account: \"\",\n    primaryBalance: 0,\n    kaytrin: null,\n    loadWeb3: () => false\n});\n\nexport default Web3Context;","import React, {PureComponent} from \"react\";\nimport \"./Loading.css\";\n\nclass Loading extends PureComponent {\n    render() {\n        return (\n            <div className=\"position-absolute top-0 bottom-0 start-0 end-0 d-flex justify-content-center align-items-center bgc-1F1E30\">\n                <div className=\"preloader\">\n                    <div className=\"preloader__ring\">\n                        <div className=\"preloader__sector\">L</div>\n                        <div className=\"preloader__sector\">o</div>\n                        <div className=\"preloader__sector\">a</div>\n                        <div className=\"preloader__sector\">d</div>\n                        <div className=\"preloader__sector\">i</div>\n                        <div className=\"preloader__sector\">n</div>\n                        <div className=\"preloader__sector\">g</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                    </div>\n                    <div className=\"preloader__ring\">\n                        <div className=\"preloader__sector\">L</div>\n                        <div className=\"preloader__sector\">o</div>\n                        <div className=\"preloader__sector\">a</div>\n                        <div className=\"preloader__sector\">d</div>\n                        <div className=\"preloader__sector\">i</div>\n                        <div className=\"preloader__sector\">n</div>\n                        <div className=\"preloader__sector\">g</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const IsEmpty = (data) => {\n    if (typeof data === \"object\") {\n        if (!data) {\n            return true;\n        }\n        return false;\n    } else if (Array.isArray(data)) {\n        if (data.length === 0) {\n            return true;\n        }\n        return false;\n    } else if (typeof data === \"string\") {\n        if (!data.trim()) {\n            return true;\n        } else if (data === \"undefined\") {\n            return true;\n        } else if (data === \"null\") {\n            return true;\n        }\n        return false;\n    } else if (typeof data === \"number\") {\n        if (data === 0) {\n            return true;\n        }\n        return false;\n    } else if (typeof data === \"undefined\") {\n        return true;\n    }\n    return false;\n};\n\nexport default IsEmpty;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass TextNeon extends PureComponent {\n    render() {\n        let size1 = this.props.size;\n        let size2 = this.props.size * 200 / 100;\n        let size3 = this.props.size * 300 / 100;\n        let size4 = this.props.size * 400 / 100;\n        let size5 = this.props.size * 500 / 100;\n        let size6 = this.props.size * 600 / 100;\n        let size7 = this.props.size * 700 / 100;\n        return (\n            <>\n                <style>{`\n                    @-webkit-keyframes neon {\n                        20%, 24%, 55% {\n                            color: #111111;\n                            text-shadow: none;\n                        }\n                        0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {\n                            color: #FFF6A9;\n                            text-shadow: 0 0 ${size1}px #FFA500, 0 0 ${size2}px #FFA500, 0 0 ${size3}px #FFA500, 0 0 ${size4}px #FFA500, 0 0 ${size5}px #FF0000, 0 0 ${size6}px #FF8D00, 0 0 ${size7}px #FF0000;\n                        }\n                    }\n                    @keyframes neon {\n                        20%, 24%, 55% {\n                            color: #111111;\n                            text-shadow: none;\n                        }\n                        0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {\n                            color: #FFF6A9;\n                            text-shadow: 0 0 ${size1}px #FFA500, 0 0 ${size2}px #FFA500, 0 0 ${size3}px #FFA500, 0 0 ${size4}px #FFA500, 0 0 ${size5}px #FF0000, 0 0 ${size6}px #FF8D00, 0 0 ${size7}px #FF0000;\n                        }\n                    }\n                `}</style>\n                <p className={this.props.className} style={{\n                    textShadow: \"0 0 5px #FFA500, 0 0 15px #FFA500, 0 0 20px #FFA500, 0 0 40px #FFA500, 0 0 60px #FF0000, 0 0 10px #FF8D00, 0 0 98px #FF0000\",\n                    color: \"#FFF6A9\",\n                    WebkitAnimation: \"neon 12s infinite\",\n                    MozAnimation: \"neon 12s infinite\",\n                    animation: \"neon 12s infinite\",\n                }}>{this.props.children}</p>\n            </>\n        );\n    }\n}\n\nTextNeon.propTypes = {\n    className: PropTypes.string,\n    size: PropTypes.number.isRequired\n};\n\nexport default TextNeon;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass TextGlow extends PureComponent {\n    render() {\n        let size1 = this.props.size;\n        let size2 = this.props.size * 200 / 100;\n        let size3 = this.props.size * 300 / 100;\n        let size4 = this.props.size * 400 / 100;\n        let size5 = this.props.size * 500 / 100;\n        let size6 = this.props.size * 600 / 100;\n        let size7 = this.props.size * 700 / 100;\n        let size8 = this.props.size * 800 / 100;\n        return (\n            <>\n                <style>{`\n                    @-webkit-keyframes glow {\n                        from {\n                            text-shadow: 0 0 ${size1}px white, 0 0 ${size2}px white, 0 0 ${size3}px #E60073, 0 0 ${size4}px #E60073, 0 0 ${size5}px #E60073, 0 0 ${size6}px #E60073, 0 0 ${size7}px #E60073;\n                        }\n                        to {\n                            text-shadow: 0 0 ${size2}px white, 0 0 ${size3}px #FF4DA6, 0 0 ${size4}px #FF4DA6, 0 0 ${size5}px #FF4DA6, 0 0 ${size6}px #FF4DA6, 0 0 ${size7}px #FF4DA6, 0 0 ${size8}px #FF4DA6;\n                        }\n                    }\n                    @keyframes glow {\n                        from {\n                            text-shadow: 0 0 ${size1}px white, 0 0 ${size2}px white, 0 0 ${size3}px #E60073, 0 0 ${size4}px #E60073, 0 0 ${size5}px #E60073, 0 0 ${size6}px #E60073, 0 0 ${size7}px #E60073;\n                        }\n                        to {\n                            text-shadow: 0 0 ${size2}px white, 0 0 ${size3}px #FF4DA6, 0 0 ${size4}px #FF4DA6, 0 0 ${size5}px #FF4DA6, 0 0 ${size6}px #FF4DA6, 0 0 ${size7}px #FF4DA6, 0 0 ${size8}px #FF4DA6;\n                        }\n                    }\n                `}</style>\n                <p className={this.props.className} style={{\n                    color: \"#FFFFFF\",\n                    WebkitAnimation: \"glow 1s ease-in-out infinite alternate\",\n                    MozAnimation: \"glow 1s ease-in-out infinite alternate\",\n                    animation: \"glow 1s ease-in-out infinite alternate\",\n                }}>{this.props.children}</p>\n            </>\n        );\n    }\n}\n\nTextGlow.propTypes = {\n    className: PropTypes.string,\n    size: PropTypes.number.isRequired\n};\n\nexport default TextGlow;","import React, {PureComponent} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Identicon from \"identicon.js\";\nimport Config from \"../configs/Config\";\nimport Web3Context from \"../contexts/Web3Context\";\nimport logo from \"../images/logo.svg\";\nimport IsEmpty from \"../helpers/IsEmpty\";\nimport TextNeon from \"../helpers/texts/TextNeon\";\nimport TextGlow from \"../helpers/texts/TextGlow\";\nimport \"./Navbar.css\";\n\nclass Navbar extends PureComponent {\n    render() {\n        return (\n            <Web3Context.Consumer>\n                {(web3Context) => (\n                    <nav className=\"navbar navbar-light bgc-1F1E30\">\n                        <div className=\"container-fluid h-100\">\n                            <Link to={Config.Links.Home} className=\"navbar-brand text-white d-flex align-items-center\">\n                                <img\n                                    src={logo}\n                                    alt=\"Brand\"\n                                    width=\"36\"\n                                    height=\"36\"\n                                    className=\"logo\"\n                                />&nbsp;&nbsp;\n                                <TextNeon className=\"m-0 fw-bold fs-4\" size={5}>Kaytrin</TextNeon>\n                            </Link>\n                            {IsEmpty(web3Context.account) ?\n                                <button className=\"btn text-white bgc-FFA500 btn-bubble\" onClick={web3Context.loadWeb3}>Connect</button> :\n                                <div className=\"account d-flex align-items-center\">\n                                    <TextGlow className=\"m-0 small\" size={1}>{web3Context.account}</TextGlow>\n                                    <img\n                                        src={`data:image/png;base64, ${new Identicon(web3Context.account, 24).toString()}`}\n                                        alt=\"Account\"\n                                        width=\"24\"\n                                        height=\"24\"\n                                        className=\"rounded-circle ms-2 logo\"\n                                    />\n                                </div>\n                            }\n                        </div>\n                    </nav>\n                )}\n            </Web3Context.Consumer>\n        );\n    }\n}\n\nexport default Navbar;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport Web3Context from \"../contexts/Web3Context\";\nimport Loading from \"../helpers/loadings/Loading\";\nimport Navbar from \"./Navbar\";\nimport \"./Template.css\";\n\nclass Template extends PureComponent {\n    render() {\n        return (\n            <Web3Context.Consumer>\n                {(web3Context) => (\n                    <TransitionGroup className={`app position-relative ${this.props.className}`}>\n                        <CSSTransition\n                            key={web3Context.loading}\n                            timeout={1000}\n                            classNames=\"fade-out\"\n                        >\n                            {web3Context.loading ? <Loading /> : <>\n                                <Navbar />\n                                {this.props.children}\n                            </>}\n                        </CSSTransition>\n                    </TransitionGroup>\n                )}\n            </Web3Context.Consumer>\n        );\n    }\n}\n\nTemplate.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Template;","import React, {PureComponent} from \"react\";\nimport Template from \"../template/Template\";\n\nclass NotFound extends PureComponent {\n    render() {\n        return (\n            <Template>404 Not Found...</Template>\n        );\n    }\n}\n\nexport default NotFound;","import {initializeApp} from \"firebase/app\";\nimport {getFirestore} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);","const IsEmail = (data) => {\n    return /\\S+@\\S+\\.\\S+/.test(data);\n};\n\nexport default IsEmail;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\nimport \"./BgForest.css\";\n\nclass BgForest extends PureComponent {\n    render() {\n        return (\n            <div className={`fireflies ${this.props.className}`}>\n                {Array.from({length: 15}).map((value, index, array) => (\n                    <div key={index} className=\"firefly\"></div>\n                ))}\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nBgForest.propTypes = {\n    className: PropTypes.string\n};\n\nexport default BgForest;","const ErrorNotDeployed = (contract, error) => {\n    console.error(`${contract.contractName} contract is not deployed to this network.`);\n    console.error(error);\n};\n\nexport default ErrorNotDeployed;","import React, {PureComponent} from \"react\";\nimport Config from \"../configs/Config\";\nimport {db} from \"../configs/FirebaseConfig\";\nimport {collection, deleteDoc, doc, getDoc, getDocs, limit, onSnapshot, orderBy, query, setDoc, startAt, startAfter, Timestamp, updateDoc, where} from \"firebase/firestore\";\nimport IsEmpty from \"../helpers/IsEmpty\";\nimport IsEmail from \"../helpers/IsEmail\";\nimport update from \"immutability-helper\";\nimport {Collapse, FormControl, InputLabel, LinearProgress, MenuItem, Select, TablePagination, TextField} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport {Modal} from \"react-bootstrap\";\nimport Template from \"../template/Template\";\nimport BgForest from \"../helpers/backgrounds/BgForest\";\nimport Web3Context from \"../contexts/Web3Context\";\nimport ErrorNotDeployed from \"../helpers/errors/ErrorNotDeployed\";\nimport \"../css/Home.css\";\n\nclass Home extends PureComponent {\n    constructor(props) {\n        super(props);\n        const params = new URLSearchParams(window.location.search);\n        const search = params.get(\"search\") || \"\";\n        const filter = params.get(\"filter\") || \"\";\n        const perPage = parseInt(params.get(\"perPage\")) || 50;\n        const page = parseInt(params.get(\"page\")) || 1;\n        this.thirtyMinutesInMillis = 1000 * 60 * 30;\n        this.statuses = {\n            zero: \"not_deployed\",\n            first: \"sleep\",\n            second: \"awake\",\n            third: \"done\",\n            fourth: \"found\",\n        };\n        this.state = {\n            collection: collection(db, \"pvks\"),\n            limit: limit(perPage),\n            listener: null,\n            loading: false,\n            canSeeOutput: false,\n            editing: false,\n            deleting: false,\n            modalDetail: false,\n            modalAdd: false,\n            data: [],\n            query: {\n                search: search,\n                filter: filter,\n                perPage: perPage,\n                page: page\n            },\n            dataDetail: {\n                id: 0,\n                domain: \"\",\n                status: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\",\n                output: [],\n                updated_at: {\n                    seconds: 0,\n                    nanoseconds: 0\n                }\n            },\n            lastData: {\n                id: 0,\n                domain: \"\",\n                status: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\",\n                output: [],\n                updated_at: {\n                    seconds: 0,\n                    nanoseconds: 0\n                }\n            },\n            add: {\n                email: \"\",\n                domain: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\"\n            },\n            addError: {\n                email: false,\n                domain: false,\n                start_crunch: false,\n                end_crunch: false,\n                last_crunch: false\n            },\n            edit: {\n                email: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\"\n            },\n            editError: {\n                email: false,\n                start_crunch: false,\n                end_crunch: false,\n                last_crunch: false\n            },\n            delete: \"\",\n            deleteError: false\n        };\n    }\n\n    componentDidMount() {\n        this.getDatabase();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props !== prevProps) {\n            this.getDatabase();\n        }\n    }\n    componentWillUnmount() {\n        if (!IsEmpty(this.state.listener)) this.state.listener();\n    }\n\n    isSleep(data) {\n        return Date.now() - (new Timestamp(data.updated_at.seconds, data.updated_at.nanoseconds)).toMillis() >= this.thirtyMinutesInMillis;\n    }\n    getStatusText(data) {\n        if (data.status === this.statuses.zero) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-warning\">Not Deployed</span></p>;\n        } else if (data.output.length > 0 && this.isSleep(data)) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span> & <span className=\"text-danger\">Sleep</span></p>;\n        } else if (data.output.length > 0 && data.status === this.statuses.second) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span> & <span className=\"text-info\">Awake</span></p>;\n        } else if (data.output.length > 0 && data.status === this.statuses.third) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span> & <span className=\"text-success\">Done</span></p>;\n        } else if (data.output.length > 0) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span></p>;\n        } else if (this.isSleep(data) && data.status === this.statuses.third) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-danger\">Sleep</span> & <span className=\"text-success\">Done</span></p>;\n        } else if (this.isSleep(data)) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-danger\">Sleep</span></p>;\n        } else if (data.status === this.statuses.third) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-success\">Done</span></p>;\n        } else if (data.status === this.statuses.second) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-info\">Awake</span></p>;\n        } else {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-warning\">Unknown</span></p>;\n        }\n    }\n    verifyOwner() {\n        return new Promise((resolve, reject) => {\n            this.setState({\n                loading: true\n            }, () => {\n                if (!IsEmpty(this.context.kaytrin)) {\n                    this.context.kaytrin.deployed().then((contract) => {\n                        contract.exec.call({\n                            from: this.context.account\n                        }).then((result) => {\n                            if (result) resolve(result);\n                        }).catch((error) => {\n                            window.alert(\"You're not the owner!\");\n                        }).finally(() => {\n                            this.setValue(\"loading\", false);\n                        });\n                    }).catch((error) => {\n                        this.setState({\n                            loading: false\n                        }, () => {\n                            window.alert(\"Wrong network, use Ropsten Network!\");\n                            ErrorNotDeployed(this.context.kaytrin, error);\n                        });\n                    }).finally(() => {});\n                } else {\n                    this.setState({\n                        loading: false\n                    }, () => {\n                        window.alert(\"You're not connected to Blockchain!\");\n                    });\n                }\n            });\n        });\n    }\n    setValue(name, value, callback = null) {\n        this.setState({\n            [name]: value\n        }, () => {\n            if (callback && typeof callback === \"function\") callback();\n        });\n    }\n\n    seeOutput() {\n        this.verifyOwner().then((result) => {\n            this.setState({\n                canSeeOutput: true\n            }, () => {\n                setTimeout(() => {\n                    this.setState({\n                        canSeeOutput: false\n                    });\n                }, 5000);\n            });\n        });\n    }\n    awake(data) {\n        this.verifyOwner().then((result) => {\n            let goto = document.createElement(\"a\");\n            goto.href = process.env.REACT_APP_AWAKE_URL.replace(\"{domain}\", data.domain).replace(\"{last_crunch}\", data.last_crunch).replace(\"{end_crunch}\", data.end_crunch);\n            goto.target = \"_blank\";\n            goto.click();\n            goto.remove();\n        });\n    }\n    add() {\n        this.setState({\n            addError: {\n                email: false,\n                domain: false,\n                start_crunch: false,\n                end_crunch: false,\n                last_crunch: false\n            }\n        }, () => {\n            let errorEmail = false;\n            let errorDomain = false;\n            let errorStartCrunch = false;\n            let errorEndCrunch = false;\n            let errorLastCrunch = false;\n            if (IsEmpty(this.state.add.email)) errorEmail = true;\n            else if (!IsEmail(this.state.add.email)) errorEmail = true;\n            if (IsEmpty(this.state.add.domain)) errorDomain = true;\n            if (IsEmpty(this.state.add.start_crunch)) errorStartCrunch = true;\n            if (IsEmpty(this.state.add.end_crunch)) errorEndCrunch = true;\n            if (IsEmpty(this.state.add.last_crunch)) errorLastCrunch = true;\n            if (!errorEmail && !errorDomain && !errorStartCrunch && !errorEndCrunch && !errorLastCrunch) {\n                this.verifyOwner().then((result) => {\n                    getDoc(doc(db, \"pvks\", this.state.add.domain)).then((data) => {\n                        if (IsEmpty(data.data())) {\n                            this.getLastData((lastData, error) => {\n                                if (!IsEmpty(lastData)) {\n                                    setDoc(doc(db, \"pvks\", this.state.add.domain), {\n                                        id: lastData.id + 1,\n                                        email: this.state.add.email,\n                                        domain: this.state.add.domain,\n                                        start_crunch: this.state.add.start_crunch,\n                                        end_crunch: this.state.add.end_crunch,\n                                        last_crunch: this.state.add.last_crunch,\n                                        output: [],\n                                        status: this.statuses.zero,\n                                        updated_at: Timestamp.now()\n                                    }).then((data) => {\n                                        this.setState({\n                                            modalAdd: false,\n                                            add: {\n                                                email: \"\",\n                                                domain: \"\",\n                                                start_crunch: \"\",\n                                                end_crunch: \"\",\n                                                last_crunch: \"\"\n                                            }\n                                        }, () => {\n                                            this.props.navigate(Config.Links.Home);\n                                        });\n                                    }).catch((error) => {\n                                        window.alert(\"Whoops, something went wrong!\");\n                                    }).finally(() => {\n                                        this.setState({\n                                            loading: false\n                                        });\n                                    });\n                                } else {\n                                    window.alert(\"Whoops, something went wrong!\");\n                                }\n                            });\n                        } else {\n                            this.setState({\n                                loading: false\n                            }, () => {\n                                window.alert(\"Domain already exists!\");\n                            });\n                        }\n                    }).catch((error) => {\n                        this.setState({\n                            loading: false\n                        }, () => {\n                            window.alert(\"Whoops, something went wrong!\");\n                        });\n                    }).finally(() => {});\n                });\n            } else {\n                this.setState({\n                    addError: {\n                        email: errorEmail,\n                        domain: errorDomain,\n                        start_crunch: errorStartCrunch,\n                        end_crunch: errorEndCrunch,\n                        last_crunch: errorLastCrunch\n                    }\n                });\n            }\n        });\n    }\n    edit() {\n        this.setState({\n            editError: {\n                email: false,\n                start_crunch: false,\n                end_crunch: false,\n                last_crunch: false\n            }\n        }, () => {\n            let errorEmail = false;\n            let errorStartCrunch = false;\n            let errorEndCrunch = false;\n            let errorLastCrunch = false;\n            if (IsEmpty(this.state.edit.email)) errorEmail = true;\n            else if (!IsEmail(this.state.edit.email)) errorEmail = true;\n            if (IsEmpty(this.state.edit.start_crunch)) errorStartCrunch = true;\n            if (IsEmpty(this.state.edit.end_crunch)) errorEndCrunch = true;\n            if (IsEmpty(this.state.edit.last_crunch)) errorLastCrunch = true;\n            if (!errorStartCrunch && !errorEndCrunch && !errorLastCrunch) {\n                this.verifyOwner().then((result) => {\n                    updateDoc(doc(db, \"pvks\", this.state.dataDetail.domain), {\n                        email: this.state.edit.email,\n                        start_crunch: this.state.edit.start_crunch,\n                        end_crunch: this.state.edit.end_crunch,\n                        last_crunch: this.state.edit.last_crunch\n                    }).then((data) => {\n                        this.setValue(\"editing\", false);\n                    }).catch((error) => {\n                        window.alert(\"Whoops, something went wrong!\");\n                    }).finally(() => {\n                        this.setValue(\"loading\", false);\n                    });\n                });\n            } else {\n                this.setState({\n                    editError: {\n                        email: errorEmail,\n                        start_crunch: errorStartCrunch,\n                        end_crunch: errorEndCrunch,\n                        last_crunch: errorLastCrunch\n                    }\n                });\n            }\n        });\n    }\n    delete() {\n        this.setState({\n            deleteError: false\n        }, () => {\n            if (!IsEmpty(this.state.delete) && this.state.delete === this.state.dataDetail.domain) {\n                this.verifyOwner().then((result) => {\n                    deleteDoc(doc(db, \"pvks\", this.state.dataDetail.domain)).then((data) => {\n                        this.setState({\n                            deleting: false,\n                            modalDetail: false,\n                            delete: \"\"\n                        });\n                    }).catch((error) => {\n                        window.alert(\"Whoops, something went wrong!\");\n                    }).finally(() => {\n                        this.setValue(\"loading\", false);\n                    });\n                });\n            } else {\n                this.setState({\n                    deleteError: true\n                });\n            }\n        });\n    }\n\n    getDatabase() {\n        this.getData();\n        this.getLastData();\n    }\n    getData() {\n        if (!IsEmpty(this.state.listener)) this.state.listener();\n        this.setState({\n            loading: true,\n            listener: null\n        }, () => {\n            let queryWhere = null;\n            if (!IsEmpty(this.state.query.search)) {\n                if (IsEmail(this.state.query.search)) queryWhere = where(\"email\", \"==\", this.state.query.search);\n                else queryWhere = where(\"domain\", \"==\", this.state.query.search);\n            } else if (!IsEmpty(this.state.query.filter)) {\n                if (this.state.query.filter === this.statuses.first) queryWhere = where(\"updated_at\", \"<=\", Timestamp.fromMillis(Date.now() - this.thirtyMinutesInMillis));\n                else if (this.state.query.filter === this.statuses.fourth) queryWhere = where(\"output\", \"!=\", []);\n                else queryWhere = where(\"status\", \"==\", this.state.query.filter);\n            }\n\n            let queryOrderBy = null;\n            if (this.state.query.filter === this.statuses.first) queryOrderBy = orderBy(\"updated_at\");\n            else if (this.state.query.filter === this.statuses.fourth) queryOrderBy = orderBy(\"output\");\n            else queryOrderBy = orderBy(\"id\");\n\n            let queryStart = null;\n            if (this.state.query.page === 1) queryStart = startAt(1);\n            else queryStart = startAfter((this.state.query.page - 1) * this.state.query.perPage);\n\n            let queryString = null;\n            if (!IsEmpty(this.state.query.search) || !IsEmpty(this.state.query.filter)) queryString = query(this.state.collection, queryWhere, queryOrderBy, queryStart, this.state.limit);\n            else queryString = query(this.state.collection, queryOrderBy, queryStart, this.state.limit);\n\n            getDocs(queryString).then((snapshot) => {\n                this.setState({\n                    data: []\n                }, () => {\n                    this.setState({\n                        data: snapshot.docs.map(value => value.data()),\n                        listener: onSnapshot(queryString, (snapshotListener) => {\n                            this.setState({\n                                data: []\n                            }, () => {\n                                this.setState({\n                                    data: snapshotListener.docs.map(value => value.data())\n                                }, () => {\n                                    if (this.state.modalDetail) {\n                                        let find = snapshotListener.docs.find(value => value.id === this.state.dataDetail.domain);\n                                        if (!IsEmpty(find)) this.setState({\n                                            dataDetail: find.data()\n                                        });\n                                    }\n                                });\n                            });\n                        })\n                    });\n                });\n            }).catch((error) => {\n                console.error(\"getData\", error.message);\n            }).finally(() => {\n                this.setValue(\"loading\", false);\n            });\n        });\n    }\n    getLastData(callback = null) {\n        getDocs(query(\n            this.state.collection,\n            orderBy(\"id\", \"desc\"),\n            limit(1)\n        )).then((snapshot) => {\n            let data = {...this.state.lastData};\n            snapshot.docs.map(value => data = value.data());\n            this.setValue(\"lastData\", data, () => typeof callback === \"function\" && callback(data, null));\n        }).catch((error) => {\n            if (typeof callback === \"function\") callback(null, error);\n        }).finally(() => {});\n    }\n\n    onPageChange(event, newPage) {\n        this.setState({\n            query: update(this.state.query, {\n                page: {$set: newPage}\n            })\n        }, () => {\n            this.generateQuery();\n        });\n    }\n    onRowPerPageChange(event) {\n        this.setState({\n            query: update(this.state.query, {\n                perPage: {$set: event.target.value},\n                page: {$set: 1}\n            })\n        }, () => {\n            this.generateQuery();\n        });\n    }\n    generateQuery() {\n        let query = \"\";\n        if (!IsEmpty(this.state.query.search)) {\n            query += `&search=${this.state.query.search}`;\n        }\n        if (!IsEmpty(this.state.query.filter)) {\n            query += `&filter=${this.state.query.filter}`;\n        }\n        if (!IsEmpty(this.state.query.perPage)) {\n            query += `&perPage=${this.state.query.perPage}`;\n        }\n        if (!IsEmpty(this.state.query.page)) {\n            query += `&page=${this.state.query.page}`;\n        }\n        query = query.substring(1);\n        this.props.navigate(`${Config.Links.Home}?${query}`);\n    }\n\n    render() {\n        return (\n            <Template className=\"bgc-1A1E23\">\n                <Modal size={\"xl\"} show={this.state.modalDetail} onHide={() => this.setState({\n                    modalDetail: false,\n                    editing: false\n                })}>\n                    <Modal.Body className=\"data-detail\">\n                        <div className=\"table-responsive pb-2 pb-sm-2 pb-md-0 pb-lg-0 pb-xl-0\">\n                            <table className=\"table table-borderless w-auto m-0\">\n                                <tbody>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">ID</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.id}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Email</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.email}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Domain</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.domain}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Status</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        {this.getStatusText(this.state.dataDetail)}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Start</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.start_crunch}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">End</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.end_crunch}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Last</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.last_crunch}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"top\" className=\"p-0\">\n                                        <p className=\"m-0\">Output</p>\n                                    </td>\n                                    <td valign=\"top\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"top\" className=\"p-0\">\n                                        {this.state.canSeeOutput ? <>\n                                            {this.state.dataDetail.output.length > 0 ? this.state.dataDetail.output.map((value, index) => (\n                                                <p key={index} className=\"m-0\">{value}</p>\n                                            )) : <p className=\"m-0\">-</p>}\n                                        </> : <LoadingButton\n                                            size={\"small\"}\n                                            color={\"success\"}\n                                            loading={this.state.loading}\n                                            variant={\"outlined\"}\n                                            className=\"p-0\"\n                                            onClick={(event) => this.seeOutput()}\n                                        >See</LoadingButton>}\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"mt-3\">\n                            <Collapse in={this.state.editing}>\n                                <TextField\n                                    type={\"email\"}\n                                    label=\"Email *\"\n                                    size={\"small\"}\n                                    className=\"w-100\"\n                                    error={this.state.editError.email}\n                                    value={this.state.edit.email}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        email: {$set: event.target.value}\n                                    }))}\n                                />\n                                <TextField\n                                    label=\"Start Crunch *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.start_crunch}\n                                    value={this.state.edit.start_crunch}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        start_crunch: {$set: event.target.value}\n                                    }))}\n                                />\n                                <TextField\n                                    label=\"End Crunch *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.end_crunch}\n                                    value={this.state.edit.end_crunch}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        end_crunch: {$set: event.target.value}\n                                    }))}\n                                />\n                                <TextField\n                                    label=\"Last Crunch *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.last_crunch}\n                                    value={this.state.edit.last_crunch}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        last_crunch: {$set: event.target.value}\n                                    }))}\n                                />\n                            </Collapse>\n                        </div>\n                        <div className=\"mt-3\">\n                            <Collapse in={this.state.deleting}>\n                                <TextField\n                                    label=\"Type the domain *\"\n                                    size={\"small\"}\n                                    className=\"w-100\"\n                                    error={this.state.deleteError}\n                                    value={this.state.delete}\n                                    onChange={(event) => this.setValue(\"delete\", event.target.value)}\n                                />\n                            </Collapse>\n                        </div>\n                        <div className=\"text-center mt-3\">\n                            {this.state.editing ?\n                                <>\n                                    <LoadingButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        loading={this.state.loading}\n                                        variant={\"contained\"}\n                                        onClick={(event) => this.edit()}\n                                    >Save</LoadingButton>\n                                    <button className=\"btn btn-sm btn-secondary px-3 ms-3\" onClick={(event) => this.setValue(\"editing\", false)}>Cancel</button>\n                                </> :\n                                <button className=\"btn btn-sm text-white bgc-FFA500 px-4\" onClick={(event) => this.setState({\n                                    editing: true,\n                                    deleting: false,\n                                    edit: {\n                                        email: this.state.dataDetail.email,\n                                        start_crunch: this.state.dataDetail.start_crunch,\n                                        end_crunch: this.state.dataDetail.end_crunch,\n                                        last_crunch: this.state.dataDetail.last_crunch\n                                    }\n                                })}>Edit</button>\n                            }\n                            <button className=\"btn btn-sm text-white bgc-1F1E30 px-4 mx-3\" onClick={(event) => this.setState({\n                                modalDetail: false,\n                                editing: false\n                            })}>Close</button>\n                            {this.state.deleting ?\n                                <LoadingButton\n                                    size={\"small\"}\n                                    color={\"error\"}\n                                    loading={this.state.loading}\n                                    variant={\"contained\"}\n                                    onClick={(event) => this.delete()}\n                                >Delete</LoadingButton> :\n                                <button className=\"btn btn-sm btn-danger px-4\" onClick={(event) => this.setState({\n                                    deleting: true,\n                                    editing: false\n                                })}>Delete</button>\n                            }\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                <Modal size={\"xl\"} show={this.state.modalAdd} onHide={() => this.setValue(\"modalAdd\", false)}>\n                    <Modal.Body className=\"data-detail\">\n                        <h6 className=\"m-0\">Add New Domain</h6>\n                        <div className=\"mt-3\">\n                            <TextField\n                                type={\"email\"}\n                                label=\"Email *\"\n                                size={\"small\"}\n                                className=\"w-100\"\n                                error={this.state.addError.email}\n                                value={this.state.add.email}\n                                onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                    email: {$set: event.target.value}\n                                }))}\n                            />\n                            <TextField\n                                label=\"Domain *\"\n                                size={\"small\"}\n                                className=\"w-100 mt-3\"\n                                error={this.state.addError.domain}\n                                value={this.state.add.domain}\n                                onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                    domain: {$set: event.target.value}\n                                }))}\n                            />\n                            <TextField\n                                label=\"Start Crunch *\"\n                                size={\"small\"}\n                                className=\"w-100 mt-3\"\n                                error={this.state.addError.start_crunch}\n                                value={this.state.add.start_crunch}\n                                onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                    start_crunch: {$set: event.target.value}\n                                }))}\n                            />\n                            <TextField\n                                label=\"End Crunch *\"\n                                size={\"small\"}\n                                className=\"w-100 mt-3\"\n                                error={this.state.addError.end_crunch}\n                                value={this.state.add.end_crunch}\n                                onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                    end_crunch: {$set: event.target.value}\n                                }))}\n                            />\n                            <TextField\n                                label=\"Last Crunch *\"\n                                size={\"small\"}\n                                className=\"w-100 mt-3\"\n                                error={this.state.addError.last_crunch}\n                                value={this.state.add.last_crunch}\n                                onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                    last_crunch: {$set: event.target.value}\n                                }))}\n                            />\n                        </div>\n                        <div className=\"text-center mt-5\">\n                            <button className=\"btn btn-sm text-white bgc-1F1E30 px-4\" onClick={(event) => this.setValue(\"modalAdd\", false)}>Close</button>\n                            <LoadingButton\n                                size={\"small\"}\n                                color={\"primary\"}\n                                loading={this.state.loading}\n                                variant={\"contained\"}\n                                onClick={(event) => this.add()}\n                                className=\"ms-2 px-4\"\n                            >Add</LoadingButton>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                <BgForest className=\"app-content\">\n                    {this.state.loading && <LinearProgress />}\n                    <div className=\"py-3\">\n                        <div className=\"container\">\n                            <div className=\"rounded d-flex justify-content-between box-shadow-primary bgc-white-opacity-95 hc-pagination px-3 py-2\">\n                                <FormControl size={\"small\"} sx={{minWidth: 100}}>\n                                    <InputLabel id=\"query-filter\">Filter</InputLabel>\n                                    <Select\n                                        labelId=\"query-filter\"\n                                        value={this.state.query.filter}\n                                        onChange={(event) => this.setValue(\"query\", update(this.state.query, {\n                                            search: {$set: \"\"},\n                                            filter: {$set: event.target.value}\n                                        }), () => this.generateQuery())}\n                                        autoWidth\n                                    >\n                                        <MenuItem value=\"\"><em>None</em></MenuItem>\n                                        <MenuItem value={this.statuses.zero}>Not Deployed</MenuItem>\n                                        <MenuItem value={this.statuses.first}>Sleep</MenuItem>\n                                        <MenuItem value={this.statuses.second}>Awake</MenuItem>\n                                        <MenuItem value={this.statuses.third}>Done</MenuItem>\n                                        <MenuItem value={this.statuses.fourth}>Found</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <TextField\n                                    label=\"Search by Domain/Email\"\n                                    size={\"small\"}\n                                    className=\"w-100 mx-2\"\n                                    value={this.state.query.search}\n                                    onChange={(event) => this.setValue(\"query\", update(this.state.query, {\n                                        search: {$set: event.target.value},\n                                        filter: {$set: \"\"}\n                                    }))}\n                                />\n                                <LoadingButton\n                                    color={\"success\"}\n                                    loading={this.state.loading}\n                                    variant={\"outlined\"}\n                                    onClick={(event) => this.onPageChange(event, 1)}\n                                >Search</LoadingButton>\n                                <LoadingButton\n                                    color={\"primary\"}\n                                    variant={\"contained\"}\n                                    onClick={(event) => this.setValue(\"modalAdd\", true)}\n                                    className=\"ms-2 white-space-nowrap\"\n                                >Add New</LoadingButton>\n                            </div>\n                            <div className=\"row\">\n                                {this.state.data.map((value, index, array) => (\n                                    <div key={index} className=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-3\">\n                                        <div className=\"small rounded box-shadow-primary bgc-white-opacity-95 table-responsive p-3 mt-3\">\n                                            <table className=\"table table-borderless m-0\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">Domain</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0 px-1\">:</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">{value.domain}</p>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">Status</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0 px-1\">:</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            {this.getStatusText(value)}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                            <div className=\"row gx-2 mt-2\">\n                                                <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\n                                                    <button className=\"btn btn-sm btn-secondary w-100\" onClick={(event) => this.setValue(\"dataDetail\", value, () => this.setValue(\"modalDetail\", true))}>Info</button>\n                                                </div>\n                                                <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 mt-2 mt-sm-2 mt-md-0 mt-lg-0 mt-xl-0\">\n                                                    <button className=\"btn btn-sm bgc-1C152D text-white w-100\" onClick={(event) => this.awake(value)} disabled={value.status === this.statuses.zero || !this.isSleep(value)}>Awake</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <div className=\"d-flex justify-content-center mt-3\">\n                                <div className=\"rounded box-shadow-primary bgc-white-opacity-95 hc-pagination\">\n                                    <TablePagination\n                                        count={this.state.lastData.id}\n                                        page={this.state.query.page - 1}\n                                        onPageChange={(event, newPage) => this.onPageChange(event, newPage + 1)}\n                                        rowsPerPage={this.state.query.perPage}\n                                        onRowsPerPageChange={(event) => this.onRowPerPageChange(event)}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </BgForest>\n            </Template>\n        );\n    }\n}\n\nHome.contextType = Web3Context;\n\nexport default Home;","import React, {PureComponent} from \"react\";\nimport {BrowserRouter, Routes, Route, Outlet, Link} from \"react-router-dom\";\nimport RouteElement from \"./helpers/RouteElement\";\nimport Config from \"./configs/Config\";\nimport NotFound from \"./pages/NotFound\";\nimport Home from \"./pages/Home\";\n\nclass AppRoutes extends PureComponent {\n    render() {\n        return (\n            <BrowserRouter>\n                <Routes>\n                    <Route path={Config.Routers.Home} element={<RouteElement component={Home} />} />\n                    <Route path={Config.Routers.Teams.Index} element={<Outlet />}>\n                        <Route index element={<div>\n                            <h1>Teams</h1>\n                            <Link to={Config.Links.Teams.Havea}>Go to Havea</Link>\n                        </div>} />\n                        <Route path={Config.Routers.Teams.Havea} element={<div>\n                            <h1>Havea</h1>\n                            <Link to={Config.Links.Teams.Index}>Back</Link>\n                        </div>} />\n                    </Route>\n                    <Route path={Config.Routers.NotFound} element={<RouteElement component={NotFound} />} />\n                </Routes>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default AppRoutes;","import React, {PureComponent} from \"react\";\nimport AppRoutes from \"./AppRoutes\";\nimport Web3 from \"web3\";\nimport TruffleContract from \"@truffle/contract\";\nimport Web3Context from \"./contexts/Web3Context\";\nimport IsEmpty from \"./helpers/IsEmpty\";\nimport Kaytrin from \"./contracts/Kaytrin.json\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min\";\n\nclass App extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.initialState = {\n            loading: true,\n            web3: null,\n            newBlockHeadersSubscription: null,\n            account: \"\",\n            primaryBalance: 0,\n            kaytrin: null,\n            loadWeb3: () => false\n        };\n        this.state = {\n            ...this.initialState\n        };\n        this.loadWeb3 = this.loadWeb3.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            loadWeb3: this.loadWeb3\n        }, () => this.loadWeb3());\n    }\n\n    loadWeb3() {\n        this.setLoading(true, () => {\n            let web3 = null;\n            if (!IsEmpty(window.ethereum)) {\n                web3 = new Web3(window.ethereum);\n                this.setState({\n                    web3: web3\n                }, () => {\n                    window.ethereum.request({method: \"eth_requestAccounts\"}).then((accounts) => {\n                        this.getAccounts(accounts);\n                        this.getListeners();\n                    }).catch((error) => {\n                        this.errorGettingAccounts();\n                    }).finally(() => {});\n                });\n            } else if (!IsEmpty(window.web3)) {\n                web3 = new Web3(window.web3.currentProvider);\n                this.setState({\n                    web3: web3\n                }, () => {\n                    if (!IsEmpty(window.ethereum)) {\n                        window.ethereum.enable().then((accounts) => {\n                            this.getAccounts(accounts);\n                            this.getListeners();\n                        }).catch((error) => {\n                            this.errorGettingAccounts();\n                        }).finally(() => {});\n                    }\n                });\n            } else {\n                this.setLoading(false);\n                window.alert(\"Non-Ethereum browser detected. You should consider tyring Metamask!\");\n            }\n        });\n    }\n\n    getAccounts(accounts) {\n        if (!IsEmpty(accounts)) {\n            this.setState({\n                account: accounts[0]\n            }, () => {\n                this.getPrimaryBalance();\n            });\n        } else {\n            this.setState({\n                ...this.initialState\n            });\n        }\n    }\n\n    getPrimaryBalance() {\n        if (!IsEmpty(this.state.account)) {\n            this.state.web3.eth.getBalance(this.state.account).then((balance) => {\n                this.setState({\n                    primaryBalance: balance\n                }, () => {\n                    this.getBlockchainData();\n                });\n            }).catch((error) => {\n                console.error(error);\n            }).finally(() => {\n                this.setLoading(false);\n            });\n        }\n    }\n\n    listenAccountChanges() {\n        if (!IsEmpty(window.ethereum)) {\n            window.ethereum.on(\"accountsChanged\", (accounts) => {\n                this.getAccounts(accounts);\n            });\n        }\n    }\n\n    listenChainChanges() {\n        if (!IsEmpty(window.ethereum)) {\n            window.ethereum.on(\"chainChanged\", (chainId) => {\n                this.getBlockchainData();\n            });\n        }\n    }\n\n    listenNewBlockHeaders() {\n        let newBlockHeadersSubscription = this.state.web3.eth.subscribe(\"newBlockHeaders\", (error, blockHeader) => {\n            if (IsEmpty(error)) {\n                this.getPrimaryBalance();\n            } else {\n                console.error(error);\n            }\n        }).on(\"connected\", (subscriptionId) => {\n            //\n        }).on(\"data\", (data) => {\n            //\n        }).on(\"error\", (error) => {\n            console.error(error);\n        });\n        this.setState({\n            newBlockHeadersSubscription: newBlockHeadersSubscription\n        });\n    }\n\n    errorGettingAccounts() {\n        console.error(\"Error getting account.\");\n        this.setLoading(false);\n    }\n\n    getListeners() {\n        this.listenAccountChanges();\n        this.listenChainChanges();\n        this.listenNewBlockHeaders();\n    }\n\n    getBlockchainData() {\n        this.loadKaytrin();\n    }\n\n    setLoading(value, callback) {\n        this.setState({\n            loading: value\n        }, () => {\n            if (!IsEmpty(callback) && typeof callback === \"function\") callback();\n        });\n    }\n\n    loadKaytrin() {\n        const kaytrin = TruffleContract(Kaytrin);\n        kaytrin.setProvider(this.state.web3.currentProvider);\n        this.setState({\n            kaytrin: kaytrin\n        });\n    }\n\n    render() {\n        return (\n            <Web3Context.Provider value={this.state}>\n                <AppRoutes />\n            </Web3Context.Provider>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}