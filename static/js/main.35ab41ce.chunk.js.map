{"version":3,"sources":["helpers/RouteElement.js","configs/Config.js","contexts/Web3Context.js","helpers/loadings/Loading.js","images/logo.svg","helpers/IsEmpty.js","helpers/texts/TextNeon.js","helpers/texts/TextGlow.js","template/Navbar.js","template/Template.js","pages/NotFound.js","configs/FirebaseConfig.js","helpers/IsEmail.js","helpers/backgrounds/BgForest.js","helpers/errors/ErrorNotDeployed.js","pages/Home.js","AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["RouteElement","RouteComponent","component","props","location","useLocation","navigate","useNavigate","Config","Routers","NotFound","Home","Teams","Index","Havea","Links","Web3Context","React","createContext","loading","web3","newBlockHeadersSubscription","account","primaryBalance","kaytrin","loadWeb3","Loading","className","PureComponent","IsEmpty","data","Array","isArray","length","trim","TextNeon","size1","this","size","size2","size3","size4","size5","size6","size7","style","textShadow","color","WebkitAnimation","MozAnimation","animation","children","TextGlow","size8","Navbar","Consumer","web3Context","to","src","logo","alt","width","height","onClick","Identicon","toString","Template","TransitionGroup","CSSTransition","timeout","classNames","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","IsEmail","test","BgForest","from","map","value","index","array","ErrorNotDeployed","contract","error","console","contractName","platformSearchObject","Object","keys","platforms","find","key","appendToCursorPosition","elementId","newText","element","document","getElementById","cursorPosition","selectionStart","substring","params","URLSearchParams","window","search","get","filter","perPage","parseInt","page","thirtyMinutesInMillis","statuses","zero","first","second","third","fourth","fifth","protocols","domain","commandAttributes","label","addFields","email","protocol","platform","platform_domain","start_crunch","end_crunch","last_crunch","command","errorFields","status","state","collection","listener","canSeeOutput","editing","deleting","modalDetail","modalAdd","query","dataDetail","id","output","updated_at","seconds","nanoseconds","lastData","add","addError","edit","editError","delete","deleteError","getDatabase","prevProps","prevState","snapshot","Date","now","Timestamp","toMillis","isSleep","Promise","resolve","reject","setState","context","alert","deployed","then","exec","call","result","catch","finally","setValue","name","callback","verifyOwner","getDocs","docs","forEach","updateDoc","doc","log","message","setTimeout","goto","createElement","replaceAll","replace","href","target","click","remove","emptyErrors","push","tempErrors","errorEmail","errorProtocol","errorDomain","errorPlatform","errorPlatformDomain","errorStartCrunch","errorEndCrunch","errorLastCrunch","errorCommand","getDoc","dataId","setDoc","update","$splice","getLastData","errorStatus","deleteDoc","getData","queryWhere","where","fromMillis","queryOrderBy","orderBy","queryStart","startAt","startAfter","queryLimit","limit","queryString","onSnapshot","snapshotListener","event","newPage","$set","generateQuery","Modal","show","onHide","Body","valign","getStatusText","LoadingButton","variant","seeOutput","Collapse","in","TextField","type","onChange","FormControl","fullWidth","InputLabel","Select","labelId","defaultValue","MenuItem","disabled","Divider","Chip","value1","index1","$push","LinearProgress","sx","minWidth","autoWidth","onPageChange","awake","TablePagination","count","rowsPerPage","onRowsPerPageChange","onRowPerPageChange","contextType","AppRoutes","path","App","initialState","bind","setLoading","ethereum","Web3","currentProvider","enable","accounts","getAccounts","getListeners","errorGettingAccounts","request","method","getPrimaryBalance","eth","getBalance","balance","getBlockchainData","on","chainId","subscribe","blockHeader","subscriptionId","listenAccountChanges","listenChainChanges","listenNewBlockHeaders","loadKaytrin","TruffleContract","Kaytrin","setProvider","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.35ab41ce.chunk.js","sourcesContent":["import React from \"react\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\nconst RouteElement = ({component: RouteComponent, ...props}) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    return <RouteComponent {...props} location={location} navigate={navigate} />;\n};\n\nexport default RouteElement;","const Config = {\n    Routers: {\n        NotFound: \"*\",\n        Home: \"//*\",\n        Teams: {\n            Index: \"teams\",\n            Havea: \"havea\",\n        }\n    },\n    Links: {\n        Home: \"/\",\n        Teams: {\n            Index: \"/teams\",\n            Havea: \"/teams/havea\",\n        }\n    }\n};\n\nexport default Config;","import React from \"react\";\n\nconst Web3Context = React.createContext({\n    loading: true,\n    web3: null,\n    newBlockHeadersSubscription: null,\n    account: \"\",\n    primaryBalance: 0,\n    kaytrin: null,\n    loadWeb3: () => false\n});\n\nexport default Web3Context;","import React, {PureComponent} from \"react\";\nimport \"./Loading.css\";\n\nclass Loading extends PureComponent {\n    render() {\n        return (\n            <div className=\"position-absolute top-0 bottom-0 start-0 end-0 d-flex justify-content-center align-items-center bgc-1F1E30\">\n                <div className=\"preloader\">\n                    <div className=\"preloader__ring\">\n                        <div className=\"preloader__sector\">L</div>\n                        <div className=\"preloader__sector\">o</div>\n                        <div className=\"preloader__sector\">a</div>\n                        <div className=\"preloader__sector\">d</div>\n                        <div className=\"preloader__sector\">i</div>\n                        <div className=\"preloader__sector\">n</div>\n                        <div className=\"preloader__sector\">g</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                    </div>\n                    <div className=\"preloader__ring\">\n                        <div className=\"preloader__sector\">L</div>\n                        <div className=\"preloader__sector\">o</div>\n                        <div className=\"preloader__sector\">a</div>\n                        <div className=\"preloader__sector\">d</div>\n                        <div className=\"preloader__sector\">i</div>\n                        <div className=\"preloader__sector\">n</div>\n                        <div className=\"preloader__sector\">g</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const IsEmpty = (data) => {\n    if (typeof data === \"object\") {\n        if (!data) {\n            return true;\n        }\n        return false;\n    } else if (Array.isArray(data)) {\n        if (data.length === 0) {\n            return true;\n        }\n        return false;\n    } else if (typeof data === \"string\") {\n        if (!data.trim()) {\n            return true;\n        } else if (data === \"undefined\") {\n            return true;\n        } else if (data === \"null\") {\n            return true;\n        }\n        return false;\n    } else if (typeof data === \"number\") {\n        if (data === 0) {\n            return true;\n        }\n        return false;\n    } else if (typeof data === \"undefined\") {\n        return true;\n    }\n    return false;\n};\n\nexport default IsEmpty;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass TextNeon extends PureComponent {\n    render() {\n        let size1 = this.props.size;\n        let size2 = this.props.size * 200 / 100;\n        let size3 = this.props.size * 300 / 100;\n        let size4 = this.props.size * 400 / 100;\n        let size5 = this.props.size * 500 / 100;\n        let size6 = this.props.size * 600 / 100;\n        let size7 = this.props.size * 700 / 100;\n        return (\n            <>\n                <style>{`\n                    @-webkit-keyframes neon {\n                        20%, 24%, 55% {\n                            color: #111111;\n                            text-shadow: none;\n                        }\n                        0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {\n                            color: #FFF6A9;\n                            text-shadow: 0 0 ${size1}px #FFA500, 0 0 ${size2}px #FFA500, 0 0 ${size3}px #FFA500, 0 0 ${size4}px #FFA500, 0 0 ${size5}px #FF0000, 0 0 ${size6}px #FF8D00, 0 0 ${size7}px #FF0000;\n                        }\n                    }\n                    @keyframes neon {\n                        20%, 24%, 55% {\n                            color: #111111;\n                            text-shadow: none;\n                        }\n                        0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {\n                            color: #FFF6A9;\n                            text-shadow: 0 0 ${size1}px #FFA500, 0 0 ${size2}px #FFA500, 0 0 ${size3}px #FFA500, 0 0 ${size4}px #FFA500, 0 0 ${size5}px #FF0000, 0 0 ${size6}px #FF8D00, 0 0 ${size7}px #FF0000;\n                        }\n                    }\n                `}</style>\n                <p className={this.props.className} style={{\n                    textShadow: \"0 0 5px #FFA500, 0 0 15px #FFA500, 0 0 20px #FFA500, 0 0 40px #FFA500, 0 0 60px #FF0000, 0 0 10px #FF8D00, 0 0 98px #FF0000\",\n                    color: \"#FFF6A9\",\n                    WebkitAnimation: \"neon 12s infinite\",\n                    MozAnimation: \"neon 12s infinite\",\n                    animation: \"neon 12s infinite\",\n                }}>{this.props.children}</p>\n            </>\n        );\n    }\n}\n\nTextNeon.propTypes = {\n    className: PropTypes.string,\n    size: PropTypes.number.isRequired\n};\n\nexport default TextNeon;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass TextGlow extends PureComponent {\n    render() {\n        let size1 = this.props.size;\n        let size2 = this.props.size * 200 / 100;\n        let size3 = this.props.size * 300 / 100;\n        let size4 = this.props.size * 400 / 100;\n        let size5 = this.props.size * 500 / 100;\n        let size6 = this.props.size * 600 / 100;\n        let size7 = this.props.size * 700 / 100;\n        let size8 = this.props.size * 800 / 100;\n        return (\n            <>\n                <style>{`\n                    @-webkit-keyframes glow {\n                        from {\n                            text-shadow: 0 0 ${size1}px white, 0 0 ${size2}px white, 0 0 ${size3}px #E60073, 0 0 ${size4}px #E60073, 0 0 ${size5}px #E60073, 0 0 ${size6}px #E60073, 0 0 ${size7}px #E60073;\n                        }\n                        to {\n                            text-shadow: 0 0 ${size2}px white, 0 0 ${size3}px #FF4DA6, 0 0 ${size4}px #FF4DA6, 0 0 ${size5}px #FF4DA6, 0 0 ${size6}px #FF4DA6, 0 0 ${size7}px #FF4DA6, 0 0 ${size8}px #FF4DA6;\n                        }\n                    }\n                    @keyframes glow {\n                        from {\n                            text-shadow: 0 0 ${size1}px white, 0 0 ${size2}px white, 0 0 ${size3}px #E60073, 0 0 ${size4}px #E60073, 0 0 ${size5}px #E60073, 0 0 ${size6}px #E60073, 0 0 ${size7}px #E60073;\n                        }\n                        to {\n                            text-shadow: 0 0 ${size2}px white, 0 0 ${size3}px #FF4DA6, 0 0 ${size4}px #FF4DA6, 0 0 ${size5}px #FF4DA6, 0 0 ${size6}px #FF4DA6, 0 0 ${size7}px #FF4DA6, 0 0 ${size8}px #FF4DA6;\n                        }\n                    }\n                `}</style>\n                <p className={this.props.className} style={{\n                    color: \"#FFFFFF\",\n                    WebkitAnimation: \"glow 1s ease-in-out infinite alternate\",\n                    MozAnimation: \"glow 1s ease-in-out infinite alternate\",\n                    animation: \"glow 1s ease-in-out infinite alternate\",\n                }}>{this.props.children}</p>\n            </>\n        );\n    }\n}\n\nTextGlow.propTypes = {\n    className: PropTypes.string,\n    size: PropTypes.number.isRequired\n};\n\nexport default TextGlow;","import React, {PureComponent} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Identicon from \"identicon.js\";\nimport Config from \"../configs/Config\";\nimport Web3Context from \"../contexts/Web3Context\";\nimport logo from \"../images/logo.svg\";\nimport IsEmpty from \"../helpers/IsEmpty\";\nimport TextNeon from \"../helpers/texts/TextNeon\";\nimport TextGlow from \"../helpers/texts/TextGlow\";\nimport \"./Navbar.css\";\n\nclass Navbar extends PureComponent {\n    render() {\n        return (\n            <Web3Context.Consumer>\n                {(web3Context) => (\n                    <nav className=\"navbar navbar-light bgc-1F1E30\">\n                        <div className=\"container-fluid h-100\">\n                            <Link to={Config.Links.Home} className=\"navbar-brand text-white d-flex align-items-center\">\n                                <img\n                                    src={logo}\n                                    alt=\"Brand\"\n                                    width=\"36\"\n                                    height=\"36\"\n                                    className=\"logo\"\n                                />&nbsp;&nbsp;\n                                <TextNeon className=\"m-0 fw-bold fs-4\" size={5}>Kaytrin</TextNeon>\n                            </Link>\n                            {IsEmpty(web3Context.account) ?\n                                <button className=\"btn text-white bgc-FFA500 btn-bubble\" onClick={web3Context.loadWeb3}>Connect</button> :\n                                <div className=\"account d-flex align-items-center\">\n                                    <TextGlow className=\"m-0 small\" size={1}>{web3Context.account}</TextGlow>\n                                    <img\n                                        src={`data:image/png;base64, ${new Identicon(web3Context.account, 24).toString()}`}\n                                        alt=\"Account\"\n                                        width=\"24\"\n                                        height=\"24\"\n                                        className=\"rounded-circle ms-2 logo\"\n                                    />\n                                </div>\n                            }\n                        </div>\n                    </nav>\n                )}\n            </Web3Context.Consumer>\n        );\n    }\n}\n\nexport default Navbar;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport Web3Context from \"../contexts/Web3Context\";\nimport Loading from \"../helpers/loadings/Loading\";\nimport Navbar from \"./Navbar\";\nimport \"./Template.css\";\n\nclass Template extends PureComponent {\n    render() {\n        return (\n            <Web3Context.Consumer>\n                {(web3Context) => (\n                    <TransitionGroup className={`app position-relative ${this.props.className}`}>\n                        <CSSTransition\n                            key={web3Context.loading}\n                            timeout={1000}\n                            classNames=\"fade-out\"\n                        >\n                            {web3Context.loading ? <Loading /> : <>\n                                <Navbar />\n                                {this.props.children}\n                            </>}\n                        </CSSTransition>\n                    </TransitionGroup>\n                )}\n            </Web3Context.Consumer>\n        );\n    }\n}\n\nTemplate.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Template;","import React, {PureComponent} from \"react\";\nimport Template from \"../template/Template\";\n\nclass NotFound extends PureComponent {\n    render() {\n        return (\n            <Template>404 Not Found...</Template>\n        );\n    }\n}\n\nexport default NotFound;","import {initializeApp} from \"firebase/app\";\nimport {getFirestore} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);","const IsEmail = (data) => {\n    return /\\S+@\\S+\\.\\S+/.test(data);\n};\n\nexport default IsEmail;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\nimport \"./BgForest.css\";\n\nclass BgForest extends PureComponent {\n    render() {\n        return (\n            <div className={`fireflies ${this.props.className}`}>\n                {Array.from({length: 15}).map((value, index, array) => (\n                    <div key={index} className=\"firefly\"></div>\n                ))}\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nBgForest.propTypes = {\n    className: PropTypes.string\n};\n\nexport default BgForest;","const ErrorNotDeployed = (contract, error) => {\n    console.error(`${contract.contractName} contract is not deployed to this network.`);\n    console.error(error);\n};\n\nexport default ErrorNotDeployed;","import React, {PureComponent} from \"react\";\nimport Config from \"../configs/Config\";\nimport {db} from \"../configs/FirebaseConfig\";\nimport {collection, deleteDoc, doc, getDoc, getDocs, limit, onSnapshot, orderBy, query, setDoc, startAt, startAfter, Timestamp, updateDoc, where} from \"firebase/firestore\";\nimport IsEmpty from \"../helpers/IsEmpty\";\nimport IsEmail from \"../helpers/IsEmail\";\nimport update from \"immutability-helper\";\nimport {Chip, Collapse, Divider, FormControl, InputLabel, LinearProgress, MenuItem, Select, TablePagination, TextField} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport {Modal} from \"react-bootstrap\";\nimport Template from \"../template/Template\";\nimport BgForest from \"../helpers/backgrounds/BgForest\";\nimport Web3Context from \"../contexts/Web3Context\";\nimport ErrorNotDeployed from \"../helpers/errors/ErrorNotDeployed\";\nimport \"../css/Home.css\";\n\nclass Home extends PureComponent {\n    constructor(props) {\n        super(props);\n        const params = new URLSearchParams(window.location.search);\n        const search = params.get(\"search\") || \"\";\n        const filter = params.get(\"filter\") || \"\";\n        const perPage = parseInt(params.get(\"perPage\")) || 50;\n        const page = parseInt(params.get(\"page\")) || 1;\n        this.thirtyMinutesInMillis = 1000 * 60 * 30;\n        this.statuses = {\n            zero: \"not_deployed\",\n            first: \"sleep\",\n            second: \"awake\",\n            third: \"done\",\n            fourth: \"found\",\n            fifth: \"suspend\",\n        };\n        this.protocols = {\n            first: \"https\",\n            second: \"http\"\n        };\n        this.platforms = {\n            first: {\n                value: \"Heroku\",\n                domain: \"herokuapp.com\"\n            },\n            second: {\n                value: \"Evennode\",\n                domain: \"ap-1.evennode.com\"\n            }\n        };\n        this.commandAttributes = [\n            {\n                label: \"Start Crunch\",\n                value: \"{start_crunch}\"\n            },\n            {\n                label: \"End Crunch\",\n                value: \"{end_crunch}\"\n            },\n            {\n                label: \"Last Crunch\",\n                value: \"{last_crunch}\"\n            }\n        ];\n        this.addFields = {\n            email: \"\",\n            protocol: \"\",\n            domain: \"\",\n            platform: \"\",\n            platform_domain: \"\",\n            start_crunch: \"\",\n            end_crunch: \"\",\n            last_crunch: \"\",\n            command: \"\"\n        };\n        this.errorFields = {\n            email: false,\n            protocol: false,\n            domain: false,\n            platform: false,\n            platform_domain: false,\n            start_crunch: false,\n            end_crunch: false,\n            last_crunch: false,\n            status: false,\n            command: false\n        };\n        this.state = {\n            collection: collection(db, \"pvks\"),\n            listener: null,\n            loading: false,\n            canSeeOutput: false,\n            editing: false,\n            deleting: false,\n            modalDetail: false,\n            modalAdd: false,\n            data: [],\n            query: {\n                search: search,\n                filter: filter,\n                perPage: perPage,\n                page: page\n            },\n            dataDetail: {\n                id: 0,\n                email: \"\",\n                protocol: \"\",\n                domain: \"\",\n                platform: \"\",\n                platform_domain: \"\",\n                status: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\",\n                output: [],\n                command: \"\",\n                updated_at: {\n                    seconds: 0,\n                    nanoseconds: 0\n                }\n            },\n            lastData: {\n                id: 0,\n                email: \"\",\n                protocol: \"\",\n                domain: \"\",\n                platform: \"\",\n                platform_domain: \"\",\n                status: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\",\n                output: [],\n                command: \"\",\n                updated_at: {\n                    seconds: 0,\n                    nanoseconds: 0\n                }\n            },\n            add: [this.addFields],\n            addError: [this.errorFields],\n            edit: {\n                email: \"\",\n                protocol: \"\",\n                domain: \"\",\n                platform: \"\",\n                platform_domain: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\",\n                status: \"\",\n                command: \"\"\n            },\n            editError: this.errorFields,\n            delete: \"\",\n            deleteError: false\n        };\n    }\n\n    componentDidMount() {\n        this.getDatabase();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props !== prevProps) {\n            this.getDatabase();\n        }\n    }\n    componentWillUnmount() {\n        if (!IsEmpty(this.state.listener)) this.state.listener();\n    }\n\n    isSleep(data) {\n        return Date.now() - (new Timestamp(data.updated_at.seconds, data.updated_at.nanoseconds)).toMillis() >= this.thirtyMinutesInMillis;\n    }\n    getStatusText(data) {\n        if (data.status === this.statuses.zero) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-warning\">Not Deployed</span></p>;\n        } else if (data.status === this.statuses.fifth) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-danger\">Suspend</span></p>;\n        } else if (data.output.length > 0 && this.isSleep(data)) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span> & <span className=\"text-danger\">Sleep</span></p>;\n        } else if (data.output.length > 0 && data.status === this.statuses.second) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span> & <span className=\"text-info\">Awake</span></p>;\n        } else if (data.output.length > 0 && data.status === this.statuses.third) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span> & <span className=\"text-success\">Done</span></p>;\n        } else if (data.output.length > 0) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span></p>;\n        } else if (this.isSleep(data) && data.status === this.statuses.third) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-danger\">Sleep</span> & <span className=\"text-success\">Done</span></p>;\n        } else if (this.isSleep(data)) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-danger\">Sleep</span></p>;\n        } else if (data.status === this.statuses.third) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-success\">Done</span></p>;\n        } else if (data.status === this.statuses.second) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-info\">Awake</span></p>;\n        } else {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-warning\">Unknown</span></p>;\n        }\n    }\n    verifyOwner() {\n        return new Promise((resolve, reject) => {\n            this.setState({\n                loading: true\n            }, () => {\n                if (!IsEmpty(this.context.kaytrin)) {\n                    this.context.kaytrin.deployed().then((contract) => {\n                        contract.exec.call({\n                            from: this.context.account\n                        }).then((result) => {\n                            if (result) resolve(result);\n                        }).catch((error) => {\n                            window.alert(\"You're not the owner!\");\n                        }).finally(() => {\n                            this.setValue(\"loading\", false);\n                        });\n                    }).catch((error) => {\n                        this.setState({\n                            loading: false\n                        }, () => {\n                            window.alert(\"Wrong network, use Ropsten Network!\");\n                            ErrorNotDeployed(this.context.kaytrin, error);\n                        });\n                    }).finally(() => {});\n                } else {\n                    this.setState({\n                        loading: false\n                    }, () => {\n                        window.alert(\"You're not connected to Blockchain!\");\n                    });\n                }\n            });\n        });\n    }\n    setValue(name, value, callback = null) {\n        this.setState({\n            [name]: value\n        }, () => {\n            if (callback && typeof callback === \"function\") callback();\n        });\n    }\n    platformSearchObject = (value) => {\n        return Object.keys(this.platforms).find(key => this.platforms[key].value === value);\n    };\n    appendToCursorPosition = (elementId, newText) => {\n        let element = document.getElementById(elementId);\n        let cursorPosition = element.selectionStart;\n        let textBeforeCursorPosition = element.value.substring(0, cursorPosition);\n        let textAfterCursorPosition = element.value.substring(cursorPosition, element.value.length);\n        let textValue = textBeforeCursorPosition + newText + textAfterCursorPosition;\n        return textValue;\n    };\n\n    reMigrate() {\n        this.verifyOwner().then((result) => {\n            getDocs(this.state.collection).then((snapshot) => {\n                const data = snapshot.docs.map(value => value.data());\n                data.forEach((value, index, array) => {\n                    updateDoc(doc(db, \"pvks\", value.id.toString()), {\n                        command: \"live.js -f checking-addresses.txt -s {last_crunch} -e {end_crunch}\"\n                    }).then((result) => {\n                        console.log(\"reMigrate/migrated\", value.id);\n                    }).catch((error) => {\n                        console.error(\"reMigrate/addData\", value.id, error.message);\n                    }).finally(() => {});\n                });\n                this.setValue(\"loading\", false);\n            }).catch((error) => {\n                console.error(\"reMigrate/getData\", error.message);\n            }).finally(() => {});\n        });\n    }\n    seeOutput() {\n        this.verifyOwner().then((result) => {\n            this.setState({\n                canSeeOutput: true\n            }, () => {\n                setTimeout(() => {\n                    this.setState({\n                        canSeeOutput: false\n                    });\n                }, 5000);\n            });\n        });\n    }\n    awake(data) {\n        if (data.status === this.statuses.zero || this.isSleep(data)) {\n            this.verifyOwner().then((result) => {\n                let goto = document.createElement(\"a\");\n                let command = data.command.replaceAll(\" \", \"+\");\n                this.commandAttributes.forEach(value => {\n                    command = command.replaceAll(value.value, data[value.value.replace(\"{\", \"\").replace(\"}\", \"\")]);\n                });\n                goto.href = process.env.REACT_APP_AWAKE_URL\n                    .replace(\"{protocol}\", data.protocol)\n                    .replace(\"{domain}\", data.domain)\n                    .replace(\"{platform_domain}\", data.platform_domain) + command;\n                goto.target = \"_blank\";\n                goto.click();\n                goto.remove();\n            });\n        } else {\n            window.alert(`${data.domain} domain isn't sleep!`);\n        }\n    }\n    add() {\n        let emptyErrors = [];\n        this.state.add.forEach((value, index, array) => {\n            emptyErrors.push(this.errorFields);\n        });\n        this.setState({\n            addError: emptyErrors\n        }, () => {\n            let tempErrors = [];\n            this.state.add.forEach((value, index, array) => {\n                let errorEmail = IsEmpty(value.email) || !IsEmail(value.email);\n                let errorProtocol = IsEmpty(value.protocol);\n                let errorDomain = IsEmpty(value.domain);\n                let errorPlatform = IsEmpty(value.platform);\n                let errorPlatformDomain = IsEmpty(value.platform_domain);\n                let errorStartCrunch = IsEmpty(value.start_crunch);\n                let errorEndCrunch = IsEmpty(value.end_crunch);\n                let errorLastCrunch = IsEmpty(value.last_crunch);\n                let errorCommand = IsEmpty(value.command);\n                tempErrors.push({\n                    email: errorEmail,\n                    protocol: errorProtocol,\n                    domain: errorDomain,\n                    platform: errorPlatform,\n                    platform_domain: errorPlatformDomain,\n                    start_crunch: errorStartCrunch,\n                    end_crunch: errorEndCrunch,\n                    last_crunch: errorLastCrunch,\n                    command: errorCommand\n                });\n                if (\n                    !errorEmail &&\n                    !errorProtocol &&\n                    !errorDomain &&\n                    !errorPlatform &&\n                    !errorPlatformDomain &&\n                    !errorStartCrunch &&\n                    !errorEndCrunch &&\n                    !errorLastCrunch &&\n                    !errorCommand\n                ) {\n                    this.verifyOwner().then((result) => {\n                        getDoc(doc(db, \"pvks\", value.domain)).then((data) => {\n                            if (IsEmpty(data.data())) {\n                                let dataId = this.state.lastData.id + index + 1;\n                                setDoc(doc(db, \"pvks\", dataId.toString()), {\n                                    id: dataId,\n                                    email: value.email,\n                                    protocol: value.protocol,\n                                    domain: value.domain,\n                                    platform: value.platform,\n                                    platform_domain: value.platform_domain,\n                                    start_crunch: value.start_crunch,\n                                    end_crunch: value.end_crunch,\n                                    last_crunch: value.last_crunch,\n                                    output: [],\n                                    status: this.statuses.zero,\n                                    command: value.command,\n                                    updated_at: Timestamp.now()\n                                }).then((data) => {\n                                    if (this.state.add.length > 1) {\n                                        this.setState({\n                                            add: update(this.state.add, {\n                                                $splice: [[index, 1]]\n                                            }),\n                                            addError: update(this.state.addError, {\n                                                $splice: [[index, 1]]\n                                            })\n                                        });\n                                    } else {\n                                        this.setState({\n                                            add: [this.addFields],\n                                            modalAdd: false\n                                        });\n                                    }\n                                    this.props.navigate(Config.Links.Home);\n                                }).catch((error) => {\n                                    window.alert(\"Whoops, something went wrong!\");\n                                }).finally(() => {\n                                    this.setValue(\"loading\", false);\n                                });\n                            } else {\n                                this.setState({\n                                    loading: false\n                                }, () => {\n                                    window.alert(`${value.domain} domain already exists!`);\n                                });\n                            }\n                        }).catch((error) => {\n                            this.setState({\n                                loading: false\n                            }, () => {\n                                window.alert(\"Whoops, something went wrong!\");\n                            });\n                        }).finally(() => {});\n                    });\n                }\n            });\n            this.setState({\n                addError: tempErrors\n            }, () => this.getLastData());\n        });\n    }\n    edit() {\n        let data = this.state.edit;\n        this.setState({\n            editError: this.errorFields\n        }, () => {\n            let errorEmail = IsEmpty(data.email) || !IsEmail(data.email);\n            let errorProtocol = IsEmpty(data.protocol);\n            let errorDomain = IsEmpty(data.domain);\n            let errorPlatform = IsEmpty(data.platform);\n            let errorPlatformDomain = IsEmpty(data.platform_domain);\n            let errorStartCrunch = IsEmpty(data.start_crunch);\n            let errorEndCrunch = IsEmpty(data.end_crunch);\n            let errorLastCrunch = IsEmpty(data.last_crunch);\n            let errorStatus = IsEmpty(data.status);\n            let errorCommand = IsEmpty(data.command);\n            if (\n                !errorEmail &&\n                !errorProtocol &&\n                !errorDomain &&\n                !errorPlatform &&\n                !errorPlatformDomain &&\n                !errorStartCrunch &&\n                !errorEndCrunch &&\n                !errorLastCrunch &&\n                !errorStatus &&\n                !errorCommand\n            ) {\n                this.verifyOwner().then((result) => {\n                    updateDoc(doc(db, \"pvks\", this.state.dataDetail.id.toString()), {\n                        email: data.email,\n                        protocol: data.protocol,\n                        domain: data.domain,\n                        platform: data.platform,\n                        platform_domain: data.platform_domain,\n                        start_crunch: data.start_crunch,\n                        end_crunch: data.end_crunch,\n                        last_crunch: data.last_crunch,\n                        status: data.status,\n                        command: data.command\n                    }).then((data) => {\n                        this.setValue(\"editing\", false);\n                    }).catch((error) => {\n                        window.alert(\"Whoops, something went wrong!\");\n                    }).finally(() => {\n                        this.setValue(\"loading\", false);\n                    });\n                });\n            } else {\n                this.setState({\n                    editError: {\n                        email: errorEmail,\n                        protocol: errorProtocol,\n                        domain: errorDomain,\n                        platform: errorPlatform,\n                        platform_domain: errorPlatformDomain,\n                        start_crunch: errorStartCrunch,\n                        end_crunch: errorEndCrunch,\n                        last_crunch: errorLastCrunch,\n                        status: errorStatus,\n                        command: errorCommand\n                    }\n                });\n            }\n        });\n    }\n    delete() {\n        this.setState({\n            deleteError: false\n        }, () => {\n            if (!IsEmpty(this.state.delete) && this.state.delete === this.state.dataDetail.domain) {\n                this.verifyOwner().then((result) => {\n                    deleteDoc(doc(db, \"pvks\", this.state.dataDetail.id.toString())).then((data) => {\n                        this.setState({\n                            deleting: false,\n                            modalDetail: false,\n                            delete: \"\"\n                        });\n                    }).catch((error) => {\n                        window.alert(\"Whoops, something went wrong!\");\n                    }).finally(() => {\n                        this.setValue(\"loading\", false);\n                    });\n                });\n            } else {\n                this.setState({\n                    deleteError: true\n                });\n            }\n        });\n    }\n\n    getDatabase() {\n        this.getData();\n        this.getLastData();\n    }\n    getData() {\n        if (!IsEmpty(this.state.listener)) this.state.listener();\n        this.setState({\n            loading: true,\n            listener: null\n        }, () => {\n            let queryWhere = null;\n            if (!IsEmpty(this.state.query.search)) {\n                if (IsEmail(this.state.query.search)) queryWhere = where(\"email\", \"==\", this.state.query.search);\n                else queryWhere = where(\"domain\", \"==\", this.state.query.search);\n            } else if (!IsEmpty(this.state.query.filter)) {\n                if (this.state.query.filter === this.statuses.first) queryWhere = where(\"updated_at\", \"<=\", Timestamp.fromMillis(Date.now() - this.thirtyMinutesInMillis));\n                else if (this.state.query.filter === this.statuses.second) queryWhere = where(\"updated_at\", \">\", Timestamp.fromMillis(Date.now() - this.thirtyMinutesInMillis));\n                else if (this.state.query.filter === this.statuses.fourth) queryWhere = where(\"output\", \"!=\", []);\n                else queryWhere = where(\"status\", \"==\", this.state.query.filter);\n            }\n\n            let queryOrderBy = null;\n            if (this.state.query.filter === this.statuses.first) queryOrderBy = orderBy(\"updated_at\");\n            else if (this.state.query.filter === this.statuses.second) queryOrderBy = orderBy(\"updated_at\");\n            else if (this.state.query.filter === this.statuses.fourth) queryOrderBy = orderBy(\"output\");\n            else queryOrderBy = orderBy(\"id\");\n\n            let queryStart = null;\n            if (this.state.query.page === 1) queryStart = startAt(1);\n            else queryStart = startAfter((this.state.query.page - 1) * this.state.query.perPage);\n\n            let queryLimit = limit(this.state.query.perPage);\n\n            let queryString = null;\n            if (!IsEmpty(this.state.query.search) || !IsEmpty(this.state.query.filter)) queryString = query(this.state.collection, queryWhere, queryOrderBy, queryStart, queryLimit);\n            else queryString = query(this.state.collection, queryOrderBy, queryStart, queryLimit);\n\n            getDocs(queryString).then((snapshot) => {\n                this.setState({\n                    data: []\n                }, () => {\n                    this.setState({\n                        data: snapshot.docs.map(value => value.data()),\n                        listener: onSnapshot(queryString, (snapshotListener) => {\n                            this.setState({\n                                data: []\n                            }, () => {\n                                this.setState({\n                                    data: snapshotListener.docs.map(value => value.data())\n                                }, () => {\n                                    if (this.state.modalDetail) {\n                                        let find = snapshotListener.docs.find(value => value.id.toString() === this.state.dataDetail.id.toString());\n                                        if (!IsEmpty(find)) this.setState({\n                                            dataDetail: find.data()\n                                        });\n                                    }\n                                });\n                            });\n                        })\n                    });\n                });\n            }).catch((error) => {\n                console.error(\"getData\", error.message);\n            }).finally(() => {\n                this.setValue(\"loading\", false);\n            });\n        });\n    }\n    getLastData(callback = null) {\n        getDocs(query(\n            this.state.collection,\n            orderBy(\"id\", \"desc\"),\n            limit(1)\n        )).then((snapshot) => {\n            let data = {...this.state.lastData};\n            snapshot.docs.map(value => data = value.data());\n            this.setValue(\"lastData\", data, () => typeof callback === \"function\" && callback(data, null));\n        }).catch((error) => {\n            if (typeof callback === \"function\") callback(null, error);\n        }).finally(() => {});\n    }\n\n    onPageChange(event, newPage) {\n        this.setState({\n            query: update(this.state.query, {\n                page: {$set: newPage}\n            })\n        }, () => {\n            this.generateQuery();\n        });\n    }\n    onRowPerPageChange(event) {\n        this.setState({\n            query: update(this.state.query, {\n                perPage: {$set: event.target.value},\n                page: {$set: 1}\n            })\n        }, () => {\n            this.generateQuery();\n        });\n    }\n    generateQuery() {\n        let query = \"\";\n        if (!IsEmpty(this.state.query.search)) {\n            query += `&search=${this.state.query.search}`;\n        }\n        if (!IsEmpty(this.state.query.filter)) {\n            query += `&filter=${this.state.query.filter}`;\n        }\n        if (!IsEmpty(this.state.query.perPage)) {\n            query += `&perPage=${this.state.query.perPage}`;\n        }\n        if (!IsEmpty(this.state.query.page)) {\n            query += `&page=${this.state.query.page}`;\n        }\n        query = query.substring(1);\n        this.props.navigate(`${Config.Links.Home}?${query}`);\n    }\n\n    render() {\n        return (\n            <Template className=\"bgc-1A1E23\">\n                <Modal size={\"xl\"} show={this.state.modalDetail} onHide={() => this.setState({\n                    modalDetail: false,\n                    editing: false\n                })}>\n                    <Modal.Body className=\"data-detail\">\n                        <div className=\"small table-responsive pb-2 pb-sm-2 pb-md-0 pb-lg-0 pb-xl-0\">\n                            <table className=\"table table-borderless w-auto m-0\">\n                                <tbody>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">ID</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.id}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Email</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.email}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Protocol</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.protocol}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Domain</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.domain}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Platform</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.platform}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Platform Domain</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.platform_domain}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Status</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        {this.getStatusText(this.state.dataDetail)}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Start</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.start_crunch}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">End</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.end_crunch}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Last</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.last_crunch}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Command</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.command}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"top\" className=\"p-0\">\n                                        <p className=\"m-0\">Output</p>\n                                    </td>\n                                    <td valign=\"top\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"top\" className=\"p-0\">\n                                        {this.state.canSeeOutput ? <>\n                                            {this.state.dataDetail.output.length > 0 ? this.state.dataDetail.output.map((value, index) => (\n                                                <p key={index} className=\"m-0\">{value}</p>\n                                            )) : <p className=\"m-0\">-</p>}\n                                        </> : <LoadingButton\n                                            size={\"small\"}\n                                            color={\"success\"}\n                                            loading={this.state.loading}\n                                            variant={\"outlined\"}\n                                            className=\"p-0\"\n                                            onClick={(event) => this.seeOutput()}\n                                        >See</LoadingButton>}\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"mt-3\">\n                            <Collapse in={this.state.editing}>\n                                <TextField\n                                    type={\"email\"}\n                                    label=\"Email *\"\n                                    size={\"small\"}\n                                    className=\"w-100\"\n                                    error={this.state.editError.email}\n                                    value={this.state.edit.email}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        email: {$set: event.target.value}\n                                    }))}\n                                />\n                                <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                    <InputLabel id=\"edit-protocol\">Protocol *</InputLabel>\n                                    <Select\n                                        labelId=\"edit-protocol\"\n                                        error={this.state.editError.protocol}\n                                        value={this.state.edit.protocol}\n                                        onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                            protocol: {$set: event.target.value}\n                                        }))}\n                                        defaultValue={this.protocols.first}\n                                    >\n                                        <MenuItem value={this.protocols.first}>HTTPS</MenuItem>\n                                        <MenuItem value={this.protocols.second}>HTTP</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <TextField\n                                    label=\"Domain *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.domain}\n                                    value={this.state.edit.domain}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        domain: {$set: event.target.value}\n                                    }))}\n                                />\n                                <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                    <InputLabel id=\"edit-platform\">Platform *</InputLabel>\n                                    <Select\n                                        labelId=\"edit-platform\"\n                                        error={this.state.editError.platform}\n                                        value={this.state.edit.platform}\n                                        onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                            platform: {$set: event.target.value},\n                                            platform_domain: {$set: this.platforms[this.platformSearchObject(event.target.value)].domain}\n                                        }))}\n                                        defaultValue={this.platforms.first.value}\n                                    >\n                                        <MenuItem value={this.platforms.first.value}>{this.platforms.first.value}</MenuItem>\n                                        <MenuItem value={this.platforms.second.value}>{this.platforms.second.value}</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <TextField\n                                    label=\"Platform Domain *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.platform_domain}\n                                    value={this.state.edit.platform_domain}\n                                    /*onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        platform_domain: {$set: event.target.value}\n                                    }))}*/\n                                    disabled\n                                />\n                                <TextField\n                                    label=\"Start Crunch *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.start_crunch}\n                                    value={this.state.edit.start_crunch}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        start_crunch: {$set: event.target.value}\n                                    }))}\n                                />\n                                <TextField\n                                    label=\"End Crunch *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.end_crunch}\n                                    value={this.state.edit.end_crunch}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        end_crunch: {$set: event.target.value}\n                                    }))}\n                                />\n                                <TextField\n                                    label=\"Last Crunch *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.last_crunch}\n                                    value={this.state.edit.last_crunch}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        last_crunch: {$set: event.target.value}\n                                    }))}\n                                />\n                                <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                    <InputLabel id=\"edit-status\">Status *</InputLabel>\n                                    <Select\n                                        labelId=\"edit-status\"\n                                        value={this.state.edit.status}\n                                        onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                            status: {$set: event.target.value}\n                                        }))}\n                                        defaultValue={this.statuses.zero}\n                                    >\n                                        <MenuItem value={this.statuses.zero}>Not Deployed</MenuItem>\n                                        <MenuItem value={this.statuses.first}>Sleep</MenuItem>\n                                        <MenuItem value={this.statuses.second}>Awake</MenuItem>\n                                        <MenuItem value={this.statuses.third}>Done</MenuItem>\n                                        <MenuItem value={this.statuses.fourth}>Found</MenuItem>\n                                        <MenuItem value={this.statuses.fifth}>Suspend</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <TextField\n                                    id=\"edit-command\"\n                                    label=\"Command *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.command}\n                                    value={this.state.edit.command}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        command: {$set: event.target.value}\n                                    }))}\n                                />\n                                <div className=\"mt-2\">\n                                    {this.commandAttributes.map((value, index) => (\n                                        <button className={`btn btn-sm border-1F1E30 ${index !== 0 && \"ms-2\"}`} onClick={event => {\n                                            this.setValue(\"edit\", update(this.state.edit, {\n                                                command: {$set: this.appendToCursorPosition(\"edit-command\", value.value)}\n                                            }));\n                                        }}>{value.label}</button>\n                                    ))}\n                                </div>\n                            </Collapse>\n                        </div>\n                        <div className=\"mt-3\">\n                            <Collapse in={this.state.deleting}>\n                                <TextField\n                                    label=\"Type the domain *\"\n                                    size={\"small\"}\n                                    className=\"w-100\"\n                                    error={this.state.deleteError}\n                                    value={this.state.delete}\n                                    onChange={(event) => this.setValue(\"delete\", event.target.value)}\n                                />\n                            </Collapse>\n                        </div>\n                        <div className=\"text-center mt-3\">\n                            {this.state.editing ?\n                                <>\n                                    <LoadingButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        loading={this.state.loading}\n                                        variant={\"contained\"}\n                                        onClick={(event) => this.edit()}\n                                    >Save</LoadingButton>\n                                    <button className=\"btn btn-sm btn-secondary px-3 ms-3\" onClick={(event) => this.setValue(\"editing\", false)}>Cancel</button>\n                                </> :\n                                <button className=\"btn btn-sm text-white bgc-FFA500 px-4\" onClick={(event) => this.setState({\n                                    editing: true,\n                                    deleting: false,\n                                    edit: this.state.dataDetail\n                                })}>Edit</button>\n                            }\n                            <button className=\"btn btn-sm text-white bgc-1F1E30 px-4 mx-3\" onClick={(event) => this.setState({\n                                modalDetail: false,\n                                editing: false\n                            })}>Close</button>\n                            {this.state.deleting ?\n                                <LoadingButton\n                                    size={\"small\"}\n                                    color={\"error\"}\n                                    loading={this.state.loading}\n                                    variant={\"contained\"}\n                                    onClick={(event) => this.delete()}\n                                >Delete</LoadingButton> :\n                                <button className=\"btn btn-sm btn-danger px-4\" onClick={(event) => this.setState({\n                                    deleting: true,\n                                    editing: false\n                                })}>Delete</button>\n                            }\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                <Modal size={\"xl\"} show={this.state.modalAdd} onHide={() => this.setValue(\"modalAdd\", false)}>\n                    <Modal.Body className=\"data-detail\">\n                        <h6 className=\"m-0\">Add New Domain</h6>\n                        <div className=\"modal-add-fields overflow-auto\">\n                            {this.state.add.map((value, index, array) => (\n                                <div className=\"mt-3\" key={index}>\n                                    <Divider>\n                                        <Chip label={`Item ${index + 1}`} />\n                                    </Divider>\n                                    <TextField\n                                        type={\"email\"}\n                                        label=\"Email *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].email}\n                                        value={value.email}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                email: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                        <InputLabel id=\"add-protocol\">Protocol *</InputLabel>\n                                        <Select\n                                            labelId=\"add-protocol\"\n                                            error={this.state.addError[index].protocol}\n                                            value={value.protocol}\n                                            onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                                [index]: {\n                                                    protocol: {$set: event.target.value}\n                                                }\n                                            }))}\n                                            defaultValue={this.protocols.first}\n                                        >\n                                            <MenuItem value={this.protocols.first}>HTTPS</MenuItem>\n                                            <MenuItem value={this.protocols.second}>HTTP</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                    <TextField\n                                        label=\"Domain *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].domain}\n                                        value={value.domain}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                domain: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                        <InputLabel id=\"add-platform\">Platform *</InputLabel>\n                                        <Select\n                                            labelId=\"add-platform\"\n                                            error={this.state.addError[index].platform}\n                                            value={value.platform}\n                                            onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                                [index]: {\n                                                    platform: {$set: event.target.value},\n                                                    platform_domain: {$set: this.platforms[this.platformSearchObject(event.target.value)].domain}\n                                                }\n                                            }))}\n                                            defaultValue={this.platforms.first.value}\n                                        >\n                                            <MenuItem value={this.platforms.first.value}>{this.platforms.first.value}</MenuItem>\n                                            <MenuItem value={this.platforms.second.value}>{this.platforms.second.value}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                    <TextField\n                                        label=\"Platform Domain *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].platform_domain}\n                                        value={value.platform_domain}\n                                        /*onChange={(event) => this.setValue(\"add\", update(this.state.edit, {\n                                            [index]: {\n                                                platform_domain: {$set: event.target.value}\n                                            }\n                                        }))}*/\n                                        disabled\n                                    />\n                                    <TextField\n                                        label=\"Start Crunch *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].start_crunch}\n                                        value={value.start_crunch}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                start_crunch: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <TextField\n                                        label=\"End Crunch *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].end_crunch}\n                                        value={value.end_crunch}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                end_crunch: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <TextField\n                                        label=\"Last Crunch *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].last_crunch}\n                                        value={value.last_crunch}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                last_crunch: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <TextField\n                                        id={`add-command-${index}`}\n                                        label=\"Command *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].command}\n                                        value={value.command}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                command: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <div className=\"mt-2\">\n                                        {this.commandAttributes.map((value1, index1) => (\n                                            <button className={`btn btn-sm border-1F1E30 ${index1 !== 0 && \"ms-2\"}`} onClick={event => {\n                                                this.setValue(\"add\", update(this.state.add, {\n                                                    [index]: {\n                                                        command: {$set: this.appendToCursorPosition(`add-command-${index}`, value1.value)}\n                                                    }\n                                                }));\n                                            }}>{value1.label}</button>\n                                        ))}\n                                    </div>\n                                    {this.state.add.length > 1 && <button className=\"btn btn-sm btn-danger px-4 mt-3\" onClick={(event) => this.setState({\n                                        add: update(this.state.add, {\n                                            $splice: [[index, 1]]\n                                        }),\n                                        addError: update(this.state.addError, {\n                                            $splice: [[index, 1]]\n                                        })\n                                    })}>-Delete</button>}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"mt-3\">\n                            <button className=\"btn btn-sm text-white bgc-1F1E30 px-4\" onClick={(event) => this.setState({\n                                add: update(this.state.add, {\n                                    $push: [this.addFields]\n                                }),\n                                addError: update(this.state.addError, {\n                                    $push: [this.errorFields]\n                                })\n                            })}>+Add</button>\n                        </div>\n                        <div className=\"text-center mt-5\">\n                            <button className=\"btn btn-sm text-white bgc-1F1E30 px-4\" onClick={(event) => this.setValue(\"modalAdd\", false)}>Close</button>\n                            <LoadingButton\n                                size={\"small\"}\n                                color={\"primary\"}\n                                loading={this.state.loading}\n                                variant={\"contained\"}\n                                onClick={(event) => this.add()}\n                                className=\"ms-2 px-4\"\n                            >Add</LoadingButton>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                <BgForest className=\"app-content\">\n                    {this.state.loading && <LinearProgress />}\n                    <div className=\"py-3\">\n                        <div className=\"container\">\n                            <div className=\"rounded d-flex box-shadow-primary bgc-white-opacity-95 hc-pagination px-3 py-2\">\n                                <FormControl size={\"small\"} sx={{minWidth: 100}}>\n                                    <InputLabel id=\"query-filter\">Filter</InputLabel>\n                                    <Select\n                                        labelId=\"query-filter\"\n                                        value={this.state.query.filter}\n                                        onChange={(event) => this.setValue(\"query\", update(this.state.query, {\n                                            search: {$set: \"\"},\n                                            filter: {$set: event.target.value}\n                                        }), () => this.generateQuery())}\n                                        autoWidth\n                                    >\n                                        <MenuItem value=\"\"><em>None</em></MenuItem>\n                                        <MenuItem value={this.statuses.zero}>Not Deployed</MenuItem>\n                                        <MenuItem value={this.statuses.first}>Sleep</MenuItem>\n                                        <MenuItem value={this.statuses.second}>Awake</MenuItem>\n                                        <MenuItem value={this.statuses.third}>Done</MenuItem>\n                                        <MenuItem value={this.statuses.fourth}>Found</MenuItem>\n                                        <MenuItem value={this.statuses.fifth}>Suspend</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                {/*<LoadingButton\n                                    color={\"info\"}\n                                    loading={this.state.loading}\n                                    variant={\"contained\"}\n                                    onClick={(event) => this.reMigrate()}\n                                    className=\"ms-2 white-space-nowrap\"\n                                >Re-migrate</LoadingButton>*/}\n                                <TextField\n                                    label=\"Search by Domain/Email\"\n                                    size={\"small\"}\n                                    className=\"w-100 ms-2\"\n                                    value={this.state.query.search}\n                                    onChange={(event) => this.setValue(\"query\", update(this.state.query, {\n                                        search: {$set: event.target.value},\n                                        filter: {$set: \"\"}\n                                    }))}\n                                />\n                                <LoadingButton\n                                    color={\"success\"}\n                                    loading={this.state.loading}\n                                    variant={\"outlined\"}\n                                    onClick={(event) => this.onPageChange(event, 1)}\n                                    className=\"ms-2\"\n                                >Search</LoadingButton>\n                                <LoadingButton\n                                    color={\"primary\"}\n                                    variant={\"contained\"}\n                                    onClick={(event) => this.setValue(\"modalAdd\", true)}\n                                    className=\"ms-2 white-space-nowrap\"\n                                >Add New</LoadingButton>\n                            </div>\n                            <div className=\"row\">\n                                {this.state.data.map((value, index, array) => (\n                                    <div key={index} className=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-3\">\n                                        <div className=\"small rounded box-shadow-primary bgc-white-opacity-95 table-responsive p-3 mt-3\">\n                                            <table className=\"table table-borderless m-0\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">Domain</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0 px-1\">:</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">{value.domain}</p>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">Platform</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0 px-1\">:</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">{value.platform}</p>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">Status</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0 px-1\">:</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            {this.getStatusText(value)}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                            <div className=\"row gx-2 mt-2\">\n                                                <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\n                                                    <button className=\"btn btn-sm btn-secondary w-100\" onClick={(event) => this.setValue(\"dataDetail\", value, () => this.setValue(\"modalDetail\", true))}>Info</button>\n                                                </div>\n                                                <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 mt-2 mt-sm-2 mt-md-0 mt-lg-0 mt-xl-0\">\n                                                    {value.status === this.statuses.zero ?\n                                                        <button className=\"btn btn-sm bgc-1C152D text-white w-100\" onClick={(event) => this.awake(value)}>Start</button> :\n                                                        <button className=\"btn btn-sm bgc-1C152D text-white w-100\" onClick={(event) => this.awake(value)} disabled={!this.isSleep(value)}>Awake</button>\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <div className=\"d-flex justify-content-center mt-3\">\n                                <div className=\"rounded box-shadow-primary bgc-white-opacity-95 hc-pagination\">\n                                    <TablePagination\n                                        count={this.state.lastData.id}\n                                        page={this.state.query.page - 1}\n                                        onPageChange={(event, newPage) => this.onPageChange(event, newPage + 1)}\n                                        rowsPerPage={this.state.query.perPage}\n                                        onRowsPerPageChange={(event) => this.onRowPerPageChange(event)}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </BgForest>\n            </Template>\n        );\n    }\n}\n\nHome.contextType = Web3Context;\n\nexport default Home;","import React, {PureComponent} from \"react\";\nimport {BrowserRouter, Routes, Route, Outlet, Link} from \"react-router-dom\";\nimport RouteElement from \"./helpers/RouteElement\";\nimport Config from \"./configs/Config\";\nimport NotFound from \"./pages/NotFound\";\nimport Home from \"./pages/Home\";\n\nclass AppRoutes extends PureComponent {\n    render() {\n        return (\n            <BrowserRouter>\n                <Routes>\n                    <Route path={Config.Routers.Home} element={<RouteElement component={Home} />} />\n                    <Route path={Config.Routers.Teams.Index} element={<Outlet />}>\n                        <Route index element={<div>\n                            <h1>Teams</h1>\n                            <Link to={Config.Links.Teams.Havea}>Go to Havea</Link>\n                        </div>} />\n                        <Route path={Config.Routers.Teams.Havea} element={<div>\n                            <h1>Havea</h1>\n                            <Link to={Config.Links.Teams.Index}>Back</Link>\n                        </div>} />\n                    </Route>\n                    <Route path={Config.Routers.NotFound} element={<RouteElement component={NotFound} />} />\n                </Routes>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default AppRoutes;","import React, {PureComponent} from \"react\";\nimport AppRoutes from \"./AppRoutes\";\nimport Web3 from \"web3\";\nimport TruffleContract from \"@truffle/contract\";\nimport Web3Context from \"./contexts/Web3Context\";\nimport IsEmpty from \"./helpers/IsEmpty\";\nimport Kaytrin from \"./contracts/Kaytrin.json\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min\";\n\nclass App extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.initialState = {\n            loading: true,\n            web3: null,\n            newBlockHeadersSubscription: null,\n            account: \"\",\n            primaryBalance: 0,\n            kaytrin: null,\n            loadWeb3: () => false\n        };\n        this.state = {\n            ...this.initialState\n        };\n        this.loadWeb3 = this.loadWeb3.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            loadWeb3: this.loadWeb3\n        }, () => this.loadWeb3());\n    }\n\n    loadWeb3() {\n        this.setLoading(true, () => {\n            let web3 = null;\n            if (!IsEmpty(window.ethereum)) {\n                web3 = new Web3(window.ethereum);\n                this.setState({\n                    web3: web3\n                }, () => {\n                    window.ethereum.request({method: \"eth_requestAccounts\"}).then((accounts) => {\n                        this.getAccounts(accounts);\n                        this.getListeners();\n                    }).catch((error) => {\n                        this.errorGettingAccounts();\n                    }).finally(() => {});\n                });\n            } else if (!IsEmpty(window.web3)) {\n                web3 = new Web3(window.web3.currentProvider);\n                this.setState({\n                    web3: web3\n                }, () => {\n                    if (!IsEmpty(window.ethereum)) {\n                        window.ethereum.enable().then((accounts) => {\n                            this.getAccounts(accounts);\n                            this.getListeners();\n                        }).catch((error) => {\n                            this.errorGettingAccounts();\n                        }).finally(() => {});\n                    }\n                });\n            } else {\n                this.setLoading(false);\n                window.alert(\"Non-Ethereum browser detected. You should consider tyring Metamask!\");\n            }\n        });\n    }\n\n    getAccounts(accounts) {\n        if (!IsEmpty(accounts)) {\n            this.setState({\n                account: accounts[0]\n            }, () => {\n                this.getPrimaryBalance();\n            });\n        } else {\n            this.setState({\n                ...this.initialState\n            });\n        }\n    }\n\n    getPrimaryBalance() {\n        if (!IsEmpty(this.state.account)) {\n            this.state.web3.eth.getBalance(this.state.account).then((balance) => {\n                this.setState({\n                    primaryBalance: balance\n                }, () => {\n                    this.getBlockchainData();\n                });\n            }).catch((error) => {\n                console.error(error);\n            }).finally(() => {\n                this.setLoading(false);\n            });\n        }\n    }\n\n    listenAccountChanges() {\n        if (!IsEmpty(window.ethereum)) {\n            window.ethereum.on(\"accountsChanged\", (accounts) => {\n                this.getAccounts(accounts);\n            });\n        }\n    }\n\n    listenChainChanges() {\n        if (!IsEmpty(window.ethereum)) {\n            window.ethereum.on(\"chainChanged\", (chainId) => {\n                this.getBlockchainData();\n            });\n        }\n    }\n\n    listenNewBlockHeaders() {\n        let newBlockHeadersSubscription = this.state.web3.eth.subscribe(\"newBlockHeaders\", (error, blockHeader) => {\n            if (IsEmpty(error)) {\n                this.getPrimaryBalance();\n            } else {\n                console.error(error);\n            }\n        }).on(\"connected\", (subscriptionId) => {\n            //\n        }).on(\"data\", (data) => {\n            //\n        }).on(\"error\", (error) => {\n            console.error(error);\n        });\n        this.setState({\n            newBlockHeadersSubscription: newBlockHeadersSubscription\n        });\n    }\n\n    errorGettingAccounts() {\n        console.error(\"Error getting account.\");\n        this.setLoading(false);\n    }\n\n    getListeners() {\n        this.listenAccountChanges();\n        this.listenChainChanges();\n        this.listenNewBlockHeaders();\n    }\n\n    getBlockchainData() {\n        this.loadKaytrin();\n    }\n\n    setLoading(value, callback) {\n        this.setState({\n            loading: value\n        }, () => {\n            if (!IsEmpty(callback) && typeof callback === \"function\") callback();\n        });\n    }\n\n    loadKaytrin() {\n        const kaytrin = TruffleContract(Kaytrin);\n        kaytrin.setProvider(this.state.web3.currentProvider);\n        this.setState({\n            kaytrin: kaytrin\n        });\n    }\n\n    render() {\n        return (\n            <Web3Context.Provider value={this.state}>\n                <AppRoutes />\n            </Web3Context.Provider>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}