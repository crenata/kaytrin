{"version":3,"sources":["helpers/RouteElement.js","configs/Config.js","contexts/Web3Context.js","helpers/loadings/Loading.js","images/logo.svg","helpers/IsEmpty.js","helpers/texts/TextNeon.js","helpers/texts/TextGlow.js","template/Navbar.js","template/Template.js","pages/NotFound.js","configs/FirebaseConfig.js","constants/Platform.js","constants/Protocol.js","constants/Status.js","constants/Version.js","helpers/IsEmail.js","helpers/UcFirst.js","helpers/backgrounds/BgForest.js","helpers/errors/ErrorNotDeployed.js","pages/Home.js","AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["RouteElement","RouteComponent","component","props","location","useLocation","navigate","useNavigate","Config","Routers","NotFound","Home","Teams","Index","Havea","Links","Web3Context","React","createContext","loading","web3","newBlockHeadersSubscription","account","primaryBalance","kaytrin","loadWeb3","Loading","className","PureComponent","IsEmpty","data","Array","isArray","length","trim","TextNeon","size1","this","size","size2","size3","size4","size5","size6","size7","style","textShadow","color","WebkitAnimation","MozAnimation","animation","children","TextGlow","size8","Navbar","Consumer","web3Context","to","src","logo","alt","width","height","onClick","Identicon","toString","Template","TransitionGroup","CSSTransition","timeout","classNames","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","Heroku","name","domain","Evennode","InfinityFree","ProFreeHost","Https","Http","NotDeployed","Sleep","Awake","Done","Found","Suspend","Legacy","V1","IsEmail","test","UcFirst","charAt","toUpperCase","slice","BgForest","from","map","value","index","array","ErrorNotDeployed","contract","error","console","contractName","platformSearchObject","Object","keys","Platform","find","key","appendToCursorPosition","elementId","newText","element","document","getElementById","cursorPosition","selectionStart","substring","params","URLSearchParams","window","search","get","filter","perPage","parseInt","page","timeSleepInMillis","commandAttributes","label","addFields","email","protocol","platform","platform_domain","start_crunch","end_crunch","last_crunch","version","command","errorFields","status","state","collection","listener","canSeeOutput","editing","deleting","modalDetail","modalAdd","query","dataDetail","id","output","updated_at","seconds","nanoseconds","lastData","add","addError","edit","editError","delete","deleteError","getDatabase","prevProps","prevState","snapshot","unListen","Date","now","Timestamp","toMillis","Version","Status","isSleep","Promise","resolve","reject","setState","context","alert","deployed","then","exec","call","result","catch","finally","setValue","callback","verifyOwner","getDocs","docs","forEach","updateDoc","doc","log","message","setTimeout","goto","createElement","replaceAll","replace","href","getVersion","target","click","remove","emptyErrors","push","tempErrors","errorEmail","errorProtocol","errorDomain","errorPlatform","errorPlatformDomain","errorStartCrunch","errorEndCrunch","errorLastCrunch","errorVersion","errorCommand","getDoc","dataId","setDoc","update","$splice","getLastData","errorStatus","deleteDoc","getData","queryWhere","where","fromMillis","queryOrderBy","orderBy","queryStart","startAt","startAfter","queryLimit","limit","queryString","onSnapshot","snapshotListener","event","newPage","$set","generateQuery","Modal","show","onHide","Body","valign","getStatusText","LoadingButton","variant","seeOutput","Collapse","in","TextField","type","onChange","FormControl","fullWidth","InputLabel","Select","labelId","defaultValue","Protocol","MenuItem","disabled","Divider","Chip","value1","index1","$push","LinearProgress","sx","minWidth","autoWidth","onPageChange","awake","TablePagination","count","rowsPerPage","onRowsPerPageChange","onRowPerPageChange","contextType","AppRoutes","path","App","initialState","bind","setLoading","ethereum","Web3","currentProvider","enable","accounts","getAccounts","getListeners","errorGettingAccounts","request","method","getPrimaryBalance","eth","getBalance","balance","getBlockchainData","on","chainId","subscribe","blockHeader","subscriptionId","listenAccountChanges","listenChainChanges","listenNewBlockHeaders","loadKaytrin","TruffleContract","Kaytrin","setProvider","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ff0915cb.chunk.js","sourcesContent":["import React from \"react\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\nconst RouteElement = ({component: RouteComponent, ...props}) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    return <RouteComponent {...props} location={location} navigate={navigate} />;\n};\n\nexport default RouteElement;","const Config = {\n    Routers: {\n        NotFound: \"*\",\n        Home: \"//*\",\n        Teams: {\n            Index: \"teams\",\n            Havea: \"havea\",\n        }\n    },\n    Links: {\n        Home: \"/\",\n        Teams: {\n            Index: \"/teams\",\n            Havea: \"/teams/havea\",\n        }\n    }\n};\n\nexport default Config;","import React from \"react\";\n\nconst Web3Context = React.createContext({\n    loading: true,\n    web3: null,\n    newBlockHeadersSubscription: null,\n    account: \"\",\n    primaryBalance: 0,\n    kaytrin: null,\n    loadWeb3: () => false\n});\n\nexport default Web3Context;","import React, {PureComponent} from \"react\";\nimport \"./Loading.css\";\n\nclass Loading extends PureComponent {\n    render() {\n        return (\n            <div className=\"position-absolute top-0 bottom-0 start-0 end-0 d-flex justify-content-center align-items-center bgc-1F1E30\">\n                <div className=\"preloader\">\n                    <div className=\"preloader__ring\">\n                        <div className=\"preloader__sector\">L</div>\n                        <div className=\"preloader__sector\">o</div>\n                        <div className=\"preloader__sector\">a</div>\n                        <div className=\"preloader__sector\">d</div>\n                        <div className=\"preloader__sector\">i</div>\n                        <div className=\"preloader__sector\">n</div>\n                        <div className=\"preloader__sector\">g</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                    </div>\n                    <div className=\"preloader__ring\">\n                        <div className=\"preloader__sector\">L</div>\n                        <div className=\"preloader__sector\">o</div>\n                        <div className=\"preloader__sector\">a</div>\n                        <div className=\"preloader__sector\">d</div>\n                        <div className=\"preloader__sector\">i</div>\n                        <div className=\"preloader__sector\">n</div>\n                        <div className=\"preloader__sector\">g</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\">.</div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                        <div className=\"preloader__sector\"></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const IsEmpty = (data) => {\n    if (typeof data === \"object\") {\n        if (!data) {\n            return true;\n        }\n        return false;\n    } else if (Array.isArray(data)) {\n        if (data.length === 0) {\n            return true;\n        }\n        return false;\n    } else if (typeof data === \"string\") {\n        if (!data.trim()) {\n            return true;\n        } else if (data === \"undefined\") {\n            return true;\n        } else if (data === \"null\") {\n            return true;\n        }\n        return false;\n    } else if (typeof data === \"number\") {\n        if (data === 0) {\n            return true;\n        }\n        return false;\n    } else if (typeof data === \"undefined\") {\n        return true;\n    }\n    return false;\n};\n\nexport default IsEmpty;","import React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TextNeon extends PureComponent {\n    render() {\n        let size1 = this.props.size;\n        let size2 = this.props.size * 200 / 100;\n        let size3 = this.props.size * 300 / 100;\n        let size4 = this.props.size * 400 / 100;\n        let size5 = this.props.size * 500 / 100;\n        let size6 = this.props.size * 600 / 100;\n        let size7 = this.props.size * 700 / 100;\n        return (\n            <>\n                <style>{`\n                    @-webkit-keyframes neon {\n                        20%, 24%, 55% {\n                            color: #111111;\n                            text-shadow: none;\n                        }\n                        0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {\n                            color: #FFF6A9;\n                            text-shadow: 0 0 ${size1}px #FFA500, 0 0 ${size2}px #FFA500, 0 0 ${size3}px #FFA500, 0 0 ${size4}px #FFA500, 0 0 ${size5}px #FF0000, 0 0 ${size6}px #FF8D00, 0 0 ${size7}px #FF0000;\n                        }\n                    }\n                    @keyframes neon {\n                        20%, 24%, 55% {\n                            color: #111111;\n                            text-shadow: none;\n                        }\n                        0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {\n                            color: #FFF6A9;\n                            text-shadow: 0 0 ${size1}px #FFA500, 0 0 ${size2}px #FFA500, 0 0 ${size3}px #FFA500, 0 0 ${size4}px #FFA500, 0 0 ${size5}px #FF0000, 0 0 ${size6}px #FF8D00, 0 0 ${size7}px #FF0000;\n                        }\n                    }\n                `}</style>\n                <p className={this.props.className} style={{\n                    textShadow: \"0 0 5px #FFA500, 0 0 15px #FFA500, 0 0 20px #FFA500, 0 0 40px #FFA500, 0 0 60px #FF0000, 0 0 10px #FF8D00, 0 0 98px #FF0000\",\n                    color: \"#FFF6A9\",\n                    WebkitAnimation: \"neon 12s infinite\",\n                    MozAnimation: \"neon 12s infinite\",\n                    animation: \"neon 12s infinite\",\n                }}>{this.props.children}</p>\n            </>\n        );\n    }\n}\n\nTextNeon.propTypes = {\n    className: PropTypes.string,\n    size: PropTypes.number.isRequired\n};\n\nexport default TextNeon;","import React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TextGlow extends PureComponent {\n    render() {\n        let size1 = this.props.size;\n        let size2 = this.props.size * 200 / 100;\n        let size3 = this.props.size * 300 / 100;\n        let size4 = this.props.size * 400 / 100;\n        let size5 = this.props.size * 500 / 100;\n        let size6 = this.props.size * 600 / 100;\n        let size7 = this.props.size * 700 / 100;\n        let size8 = this.props.size * 800 / 100;\n        return (\n            <>\n                <style>{`\n                    @-webkit-keyframes glow {\n                        from {\n                            text-shadow: 0 0 ${size1}px white, 0 0 ${size2}px white, 0 0 ${size3}px #E60073, 0 0 ${size4}px #E60073, 0 0 ${size5}px #E60073, 0 0 ${size6}px #E60073, 0 0 ${size7}px #E60073;\n                        }\n                        to {\n                            text-shadow: 0 0 ${size2}px white, 0 0 ${size3}px #FF4DA6, 0 0 ${size4}px #FF4DA6, 0 0 ${size5}px #FF4DA6, 0 0 ${size6}px #FF4DA6, 0 0 ${size7}px #FF4DA6, 0 0 ${size8}px #FF4DA6;\n                        }\n                    }\n                    @keyframes glow {\n                        from {\n                            text-shadow: 0 0 ${size1}px white, 0 0 ${size2}px white, 0 0 ${size3}px #E60073, 0 0 ${size4}px #E60073, 0 0 ${size5}px #E60073, 0 0 ${size6}px #E60073, 0 0 ${size7}px #E60073;\n                        }\n                        to {\n                            text-shadow: 0 0 ${size2}px white, 0 0 ${size3}px #FF4DA6, 0 0 ${size4}px #FF4DA6, 0 0 ${size5}px #FF4DA6, 0 0 ${size6}px #FF4DA6, 0 0 ${size7}px #FF4DA6, 0 0 ${size8}px #FF4DA6;\n                        }\n                    }\n                `}</style>\n                <p className={this.props.className} style={{\n                    color: \"#FFFFFF\",\n                    WebkitAnimation: \"glow 1s ease-in-out infinite alternate\",\n                    MozAnimation: \"glow 1s ease-in-out infinite alternate\",\n                    animation: \"glow 1s ease-in-out infinite alternate\",\n                }}>{this.props.children}</p>\n            </>\n        );\n    }\n}\n\nTextGlow.propTypes = {\n    className: PropTypes.string,\n    size: PropTypes.number.isRequired\n};\n\nexport default TextGlow;","import React, {PureComponent} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Identicon from \"identicon.js\";\nimport Config from \"../configs/Config\";\nimport Web3Context from \"../contexts/Web3Context\";\nimport logo from \"../images/logo.svg\";\nimport IsEmpty from \"../helpers/IsEmpty\";\nimport TextNeon from \"../helpers/texts/TextNeon\";\nimport TextGlow from \"../helpers/texts/TextGlow\";\nimport \"./Navbar.css\";\n\nclass Navbar extends PureComponent {\n    render() {\n        return (\n            <Web3Context.Consumer>\n                {(web3Context) => (\n                    <nav className=\"navbar navbar-light bgc-1F1E30\">\n                        <div className=\"container-fluid h-100\">\n                            <Link to={Config.Links.Home} className=\"navbar-brand text-white d-flex align-items-center\">\n                                <img\n                                    src={logo}\n                                    alt=\"Brand\"\n                                    width=\"36\"\n                                    height=\"36\"\n                                    className=\"logo\"\n                                />&nbsp;&nbsp;\n                                <TextNeon className=\"m-0 fw-bold fs-4\" size={5}>Kaytrin</TextNeon>\n                            </Link>\n                            {IsEmpty(web3Context.account) ?\n                                <button className=\"btn text-white bgc-FFA500 btn-bubble\" onClick={web3Context.loadWeb3}>Connect</button> :\n                                <div className=\"account d-flex align-items-center\">\n                                    <TextGlow className=\"m-0 small\" size={1}>{web3Context.account}</TextGlow>\n                                    <img\n                                        src={`data:image/png;base64, ${new Identicon(web3Context.account, 24).toString()}`}\n                                        alt=\"Account\"\n                                        width=\"24\"\n                                        height=\"24\"\n                                        className=\"rounded-circle ms-2 logo\"\n                                    />\n                                </div>\n                            }\n                        </div>\n                    </nav>\n                )}\n            </Web3Context.Consumer>\n        );\n    }\n}\n\nexport default Navbar;","import React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport Web3Context from \"../contexts/Web3Context\";\nimport Loading from \"../helpers/loadings/Loading\";\nimport Navbar from \"./Navbar\";\nimport \"./Template.css\";\n\nclass Template extends PureComponent {\n    render() {\n        return (\n            <Web3Context.Consumer>\n                {(web3Context) => (\n                    <TransitionGroup className={`app position-relative ${this.props.className}`}>\n                        <CSSTransition\n                            key={web3Context.loading}\n                            timeout={1000}\n                            classNames=\"fade-out\"\n                        >\n                            {web3Context.loading ? <Loading /> : <>\n                                <Navbar />\n                                {this.props.children}\n                            </>}\n                        </CSSTransition>\n                    </TransitionGroup>\n                )}\n            </Web3Context.Consumer>\n        );\n    }\n}\n\nTemplate.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Template;","import React, {PureComponent} from \"react\";\nimport Template from \"../template/Template\";\n\nclass NotFound extends PureComponent {\n    render() {\n        return (\n            <Template>404 Not Found...</Template>\n        );\n    }\n}\n\nexport default NotFound;","import {initializeApp} from \"firebase/app\";\nimport {getFirestore} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);","export const Heroku = {\r\n    name: \"Heroku\",\r\n    domain: \"herokuapp.com\"\r\n};\r\nexport const Evennode = {\r\n    name: \"Evennode\",\r\n    domain: \"ap-1.evennode.com\"\r\n};\r\nexport const InfinityFree = {\r\n    name: \"InfinityFree\",\r\n    domain: \"rf.gd\"\r\n};\r\nexport const ProFreeHost = {\r\n    name: \"ProFreeHost\",\r\n    domain: \"unaux.com\"\r\n};","export const Https = \"https\";\r\nexport const Http = \"http\";","export const NotDeployed = \"not_deployed\";\r\nexport const Sleep = \"sleep\";\r\nexport const Awake = \"awake\";\r\nexport const Done = \"done\";\r\nexport const Found = \"found\";\r\nexport const Suspend = \"suspend\";","export const Legacy = \"legacy\";\r\nexport const V1 = \"v1\";","const IsEmail = (data) => {\n    return /\\S+@\\S+\\.\\S+/.test(data);\n};\n\nexport default IsEmail;","const UcFirst = (data) => {\n    return data.charAt(0).toUpperCase() + data.slice(1);\n};\n\nexport default UcFirst;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\nimport \"./BgForest.css\";\n\nclass BgForest extends PureComponent {\n    render() {\n        return (\n            <div className={`fireflies ${this.props.className}`}>\n                {Array.from({length: 15}).map((value, index, array) => (\n                    <div key={index} className=\"firefly\"></div>\n                ))}\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nBgForest.propTypes = {\n    className: PropTypes.string\n};\n\nexport default BgForest;","const ErrorNotDeployed = (contract, error) => {\n    console.error(`${contract.contractName} contract is not deployed to this network.`);\n    console.error(error);\n};\n\nexport default ErrorNotDeployed;","import React, {PureComponent} from \"react\";\nimport Config from \"../configs/Config\";\nimport {db} from \"../configs/FirebaseConfig\";\nimport * as Platform from \"../constants/Platform\";\nimport * as Protocol from \"../constants/Protocol\";\nimport * as Status from \"../constants/Status\";\nimport * as Version from \"../constants/Version\";\nimport {collection, deleteDoc, doc, getDoc, getDocs, limit, onSnapshot, orderBy, query, setDoc, startAt, startAfter, Timestamp, updateDoc, where} from \"firebase/firestore\";\nimport IsEmpty from \"../helpers/IsEmpty\";\nimport IsEmail from \"../helpers/IsEmail\";\nimport UcFirst from \"../helpers/UcFirst\";\nimport update from \"immutability-helper\";\nimport {Chip, Collapse, Divider, FormControl, InputLabel, LinearProgress, MenuItem, Select, TablePagination, TextField} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport {Modal} from \"react-bootstrap\";\nimport Template from \"../template/Template\";\nimport BgForest from \"../helpers/backgrounds/BgForest\";\nimport Web3Context from \"../contexts/Web3Context\";\nimport ErrorNotDeployed from \"../helpers/errors/ErrorNotDeployed\";\nimport \"../css/Home.css\";\n\nclass Home extends PureComponent {\n    constructor(props) {\n        super(props);\n        const params = new URLSearchParams(window.location.search);\n        const search = params.get(\"search\") || \"\";\n        const filter = params.get(\"filter\") || \"\";\n        const perPage = parseInt(params.get(\"perPage\")) || 50;\n        const page = parseInt(params.get(\"page\")) || 1;\n        this.timeSleepInMillis = 1000 * 60 * 60 * 3;\n        this.commandAttributes = [\n            {\n                label: \"Start Crunch\",\n                value: \"{start_crunch}\"\n            },\n            {\n                label: \"End Crunch\",\n                value: \"{end_crunch}\"\n            },\n            {\n                label: \"Last Crunch\",\n                value: \"{last_crunch}\"\n            }\n        ];\n        this.addFields = {\n            email: \"\",\n            protocol: \"\",\n            domain: \"\",\n            platform: \"\",\n            platform_domain: \"\",\n            start_crunch: \"\",\n            end_crunch: \"\",\n            last_crunch: \"\",\n            version: \"\",\n            command: \"\"\n        };\n        this.errorFields = {\n            email: false,\n            protocol: false,\n            domain: false,\n            platform: false,\n            platform_domain: false,\n            start_crunch: false,\n            end_crunch: false,\n            last_crunch: false,\n            version: false,\n            status: false,\n            command: false\n        };\n        this.state = {\n            collection: collection(db, \"pvks\"),\n            listener: null,\n            loading: false,\n            canSeeOutput: false,\n            editing: false,\n            deleting: false,\n            modalDetail: false,\n            modalAdd: false,\n            data: [],\n            query: {\n                search: search,\n                filter: filter,\n                perPage: perPage,\n                page: page\n            },\n            dataDetail: {\n                id: 0,\n                email: \"\",\n                protocol: \"\",\n                domain: \"\",\n                platform: \"\",\n                platform_domain: \"\",\n                status: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\",\n                version: \"\",\n                output: [],\n                command: \"\",\n                updated_at: {\n                    seconds: 0,\n                    nanoseconds: 0\n                }\n            },\n            lastData: {\n                id: 0,\n                email: \"\",\n                protocol: \"\",\n                domain: \"\",\n                platform: \"\",\n                platform_domain: \"\",\n                status: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\",\n                version: \"\",\n                output: [],\n                command: \"\",\n                updated_at: {\n                    seconds: 0,\n                    nanoseconds: 0\n                }\n            },\n            add: [this.addFields],\n            addError: [this.errorFields],\n            edit: {\n                email: \"\",\n                protocol: \"\",\n                domain: \"\",\n                platform: \"\",\n                platform_domain: \"\",\n                start_crunch: \"\",\n                end_crunch: \"\",\n                last_crunch: \"\",\n                version: \"\",\n                status: \"\",\n                command: \"\"\n            },\n            editError: this.errorFields,\n            delete: \"\",\n            deleteError: false\n        };\n    }\n\n    componentDidMount() {\n        this.getDatabase();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props !== prevProps) {\n            this.getDatabase();\n        }\n    }\n    componentWillUnmount() {\n        this.unListen();\n    }\n\n    isSleep(data) {\n        return Date.now() - (new Timestamp(data.updated_at.seconds, data.updated_at.nanoseconds)).toMillis() >= this.timeSleepInMillis;\n    }\n    getVersion(data) {\n        if (IsEmpty(data) || data === Version.Legacy) return \"pvk\";\n        else if (data === Version.V1) return \"v1.php\";\n        else return \"pvk\";\n    }\n    getStatusText(data) {\n        if (data.status === Status.NotDeployed) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-warning\">Not Deployed</span></p>;\n        } else if (data.status === Status.Suspend) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-danger\">Suspend</span></p>;\n        } else if (data.output.length > 0 && this.isSleep(data)) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span> & <span className=\"text-danger\">Sleep</span></p>;\n        } else if (data.output.length > 0 && data.status === Status.Awake) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span> & <span className=\"text-info\">Awake</span></p>;\n        } else if (data.output.length > 0 && data.status === Status.Done) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span> & <span className=\"text-success\">Done</span></p>;\n        } else if (data.output.length > 0) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-primary\">Found</span></p>;\n        } else if (this.isSleep(data) && data.status === Status.Done) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-danger\">Sleep</span> & <span className=\"text-success\">Done</span></p>;\n        } else if (this.isSleep(data)) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-danger\">Sleep</span></p>;\n        } else if (data.status === Status.Done) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-success\">Done</span></p>;\n        } else if (data.status === Status.Awake) {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-info\">Awake</span></p>;\n        } else {\n            return <p className=\"m-0 fw-bold\"><span className=\"text-warning\">Unknown</span></p>;\n        }\n    }\n    verifyOwner() {\n        return new Promise((resolve, reject) => {\n            this.setState({\n                loading: true\n            }, () => {\n                if (!IsEmpty(this.context.kaytrin)) {\n                    this.context.kaytrin.deployed().then((contract) => {\n                        contract.exec.call({\n                            from: this.context.account\n                        }).then((result) => {\n                            if (result) resolve(result);\n                        }).catch((error) => {\n                            window.alert(\"You're not the owner!\");\n                        }).finally(() => {\n                            this.setValue(\"loading\", false);\n                        });\n                    }).catch((error) => {\n                        this.setState({\n                            loading: false\n                        }, () => {\n                            window.alert(\"Wrong network, use Ropsten Network!\");\n                            ErrorNotDeployed(this.context.kaytrin, error);\n                        });\n                    }).finally(() => {});\n                } else {\n                    this.setState({\n                        loading: false\n                    }, () => {\n                        window.alert(\"You're not connected to Blockchain!\");\n                    });\n                }\n            });\n        });\n    }\n    setValue(name, value, callback = null) {\n        this.setState({\n            [name]: value\n        }, () => {\n            if (callback && typeof callback === \"function\") callback();\n        });\n    }\n    platformSearchObject = (value) => {\n        return Object.keys(Platform).find(key => Platform[key].name === value);\n    };\n    appendToCursorPosition = (elementId, newText) => {\n        let element = document.getElementById(elementId);\n        let cursorPosition = element.selectionStart;\n        let textBeforeCursorPosition = element.value.substring(0, cursorPosition);\n        let textAfterCursorPosition = element.value.substring(cursorPosition, element.value.length);\n        let textValue = textBeforeCursorPosition + newText + textAfterCursorPosition;\n        return textValue;\n    };\n\n    reMigrate() {\n        this.verifyOwner().then((result) => {\n            getDocs(this.state.collection).then((snapshot) => {\n                const data = snapshot.docs.map(value => value.data());\n                data.forEach((value, index, array) => {\n                    updateDoc(doc(db, \"pvks\", value.id.toString()), {\n                        command: \"live.js -f checking-addresses.txt -s {last_crunch} -e {end_crunch}\"\n                    }).then((result) => {\n                        console.log(\"reMigrate/migrated\", value.id);\n                    }).catch((error) => {\n                        console.error(\"reMigrate/addData\", value.id, error.message);\n                    }).finally(() => {});\n                });\n                this.setValue(\"loading\", false);\n            }).catch((error) => {\n                console.error(\"reMigrate/getData\", error.message);\n            }).finally(() => {});\n        });\n    }\n    seeOutput() {\n        this.verifyOwner().then((result) => {\n            this.setState({\n                canSeeOutput: true\n            }, () => {\n                setTimeout(() => {\n                    this.setState({\n                        canSeeOutput: false\n                    });\n                }, 5000);\n            });\n        });\n    }\n    awake(data) {\n        if (data.status === Status.NotDeployed || this.isSleep(data)) {\n            this.verifyOwner().then((result) => {\n                let goto = document.createElement(\"a\");\n                let command = data.command.replaceAll(\" \", \"+\");\n                this.commandAttributes.forEach(value => {\n                    command = command.replaceAll(value.value, data[value.value.replace(\"{\", \"\").replace(\"}\", \"\")]);\n                });\n                goto.href = process.env.REACT_APP_AWAKE_URL\n                    .replace(\"{protocol}\", data.protocol)\n                    .replace(\"{domain}\", data.domain)\n                    .replace(\"{platform_domain}\", data.platform_domain)\n                    .replace(\"{version}\", this.getVersion(data.version)) + command;\n                goto.target = \"_blank\";\n                goto.click();\n                goto.remove();\n            });\n        } else {\n            window.alert(`${data.domain} domain isn't sleep!`);\n        }\n    }\n    add() {\n        let emptyErrors = [];\n        this.state.add.forEach((value, index, array) => {\n            emptyErrors.push(this.errorFields);\n        });\n        this.setState({\n            addError: emptyErrors\n        }, () => {\n            let tempErrors = [];\n            this.state.add.forEach((value, index, array) => {\n                let errorEmail = IsEmpty(value.email) || !IsEmail(value.email);\n                let errorProtocol = IsEmpty(value.protocol);\n                let errorDomain = IsEmpty(value.domain);\n                let errorPlatform = IsEmpty(value.platform);\n                let errorPlatformDomain = IsEmpty(value.platform_domain);\n                let errorStartCrunch = IsEmpty(value.start_crunch);\n                let errorEndCrunch = IsEmpty(value.end_crunch);\n                let errorLastCrunch = IsEmpty(value.last_crunch);\n                let errorVersion = IsEmpty(value.version);\n                let errorCommand = IsEmpty(value.command);\n                tempErrors.push({\n                    email: errorEmail,\n                    protocol: errorProtocol,\n                    domain: errorDomain,\n                    platform: errorPlatform,\n                    platform_domain: errorPlatformDomain,\n                    start_crunch: errorStartCrunch,\n                    end_crunch: errorEndCrunch,\n                    last_crunch: errorLastCrunch,\n                    version: errorVersion,\n                    command: errorCommand\n                });\n                if (\n                    !errorEmail &&\n                    !errorProtocol &&\n                    !errorDomain &&\n                    !errorPlatform &&\n                    !errorPlatformDomain &&\n                    !errorStartCrunch &&\n                    !errorEndCrunch &&\n                    !errorLastCrunch &&\n                    !errorVersion &&\n                    !errorCommand\n                ) {\n                    this.verifyOwner().then((result) => {\n                        getDoc(doc(db, \"pvks\", value.domain)).then((data) => {\n                            if (IsEmpty(data.data())) {\n                                let dataId = this.state.lastData.id + index + 1;\n                                setDoc(doc(db, \"pvks\", dataId.toString()), {\n                                    id: dataId,\n                                    email: value.email,\n                                    protocol: value.protocol,\n                                    domain: value.domain,\n                                    platform: value.platform,\n                                    platform_domain: value.platform_domain,\n                                    start_crunch: value.start_crunch,\n                                    end_crunch: value.end_crunch,\n                                    last_crunch: value.last_crunch,\n                                    version: value.version,\n                                    output: [],\n                                    status: Status.NotDeployed,\n                                    command: value.command,\n                                    updated_at: Timestamp.now()\n                                }).then((data) => {\n                                    if (this.state.add.length > 1) {\n                                        this.setState({\n                                            add: update(this.state.add, {\n                                                $splice: [[index, 1]]\n                                            }),\n                                            addError: update(this.state.addError, {\n                                                $splice: [[index, 1]]\n                                            })\n                                        });\n                                    } else {\n                                        this.setState({\n                                            add: [this.addFields],\n                                            modalAdd: false\n                                        });\n                                    }\n                                    this.props.navigate(Config.Links.Home);\n                                }).catch((error) => {\n                                    window.alert(\"Whoops, something went wrong!\");\n                                }).finally(() => {\n                                    this.setValue(\"loading\", false);\n                                });\n                            } else {\n                                this.setState({\n                                    loading: false\n                                }, () => {\n                                    window.alert(`${value.domain} domain already exists!`);\n                                });\n                            }\n                        }).catch((error) => {\n                            this.setState({\n                                loading: false\n                            }, () => {\n                                window.alert(\"Whoops, something went wrong!\");\n                            });\n                        }).finally(() => {});\n                    });\n                }\n            });\n            this.setState({\n                addError: tempErrors\n            }, () => this.getLastData());\n        });\n    }\n    edit() {\n        let data = this.state.edit;\n        this.setState({\n            editError: this.errorFields\n        }, () => {\n            let errorEmail = IsEmpty(data.email) || !IsEmail(data.email);\n            let errorProtocol = IsEmpty(data.protocol);\n            let errorDomain = IsEmpty(data.domain);\n            let errorPlatform = IsEmpty(data.platform);\n            let errorPlatformDomain = IsEmpty(data.platform_domain);\n            let errorStartCrunch = IsEmpty(data.start_crunch);\n            let errorEndCrunch = IsEmpty(data.end_crunch);\n            let errorLastCrunch = IsEmpty(data.last_crunch);\n            let errorVersion = IsEmpty(data.version);\n            let errorStatus = IsEmpty(data.status);\n            let errorCommand = IsEmpty(data.command);\n            if (\n                !errorEmail &&\n                !errorProtocol &&\n                !errorDomain &&\n                !errorPlatform &&\n                !errorPlatformDomain &&\n                !errorStartCrunch &&\n                !errorEndCrunch &&\n                !errorLastCrunch &&\n                !errorVersion &&\n                !errorStatus &&\n                !errorCommand\n            ) {\n                this.verifyOwner().then((result) => {\n                    updateDoc(doc(db, \"pvks\", this.state.dataDetail.id.toString()), {\n                        email: data.email,\n                        protocol: data.protocol,\n                        domain: data.domain,\n                        platform: data.platform,\n                        platform_domain: data.platform_domain,\n                        start_crunch: data.start_crunch,\n                        end_crunch: data.end_crunch,\n                        last_crunch: data.last_crunch,\n                        version: data.version,\n                        status: data.status,\n                        command: data.command\n                    }).then((data) => {\n                        this.setValue(\"editing\", false);\n                    }).catch((error) => {\n                        window.alert(\"Whoops, something went wrong!\");\n                    }).finally(() => {\n                        this.setValue(\"loading\", false);\n                    });\n                });\n            } else {\n                this.setState({\n                    editError: {\n                        email: errorEmail,\n                        protocol: errorProtocol,\n                        domain: errorDomain,\n                        platform: errorPlatform,\n                        platform_domain: errorPlatformDomain,\n                        start_crunch: errorStartCrunch,\n                        end_crunch: errorEndCrunch,\n                        last_crunch: errorLastCrunch,\n                        version: errorVersion,\n                        status: errorStatus,\n                        command: errorCommand\n                    }\n                });\n            }\n        });\n    }\n    delete() {\n        this.setState({\n            deleteError: false\n        }, () => {\n            if (!IsEmpty(this.state.delete) && this.state.delete === this.state.dataDetail.domain) {\n                this.verifyOwner().then((result) => {\n                    deleteDoc(doc(db, \"pvks\", this.state.dataDetail.id.toString())).then((data) => {\n                        this.setState({\n                            deleting: false,\n                            modalDetail: false,\n                            delete: \"\"\n                        });\n                    }).catch((error) => {\n                        window.alert(\"Whoops, something went wrong!\");\n                    }).finally(() => {\n                        this.setValue(\"loading\", false);\n                    });\n                });\n            } else {\n                this.setState({\n                    deleteError: true\n                });\n            }\n        });\n    }\n\n    unListen() {\n        if (!IsEmpty(this.state.listener)) this.state.listener();\n    }\n    getDatabase() {\n        this.getData();\n        this.getLastData();\n    }\n    getData() {\n        this.unListen();\n        this.setState({\n            loading: true,\n            listener: null\n        }, () => {\n            let queryWhere = null;\n            if (!IsEmpty(this.state.query.search)) {\n                if (IsEmail(this.state.query.search)) queryWhere = where(\"email\", \"==\", this.state.query.search);\n                else queryWhere = where(\"domain\", \"==\", this.state.query.search);\n            } else if (!IsEmpty(this.state.query.filter)) {\n                if (this.state.query.filter === Status.Sleep) queryWhere = where(\"updated_at\", \"<=\", Timestamp.fromMillis(Date.now() - this.timeSleepInMillis));\n                else if (this.state.query.filter === Status.Awake) queryWhere = where(\"updated_at\", \">\", Timestamp.fromMillis(Date.now() - this.timeSleepInMillis));\n                else if (this.state.query.filter === Status.Found) queryWhere = where(\"output\", \"!=\", []);\n                else queryWhere = where(\"status\", \"==\", this.state.query.filter);\n            }\n\n            let queryOrderBy = null;\n            if (this.state.query.filter === Status.Sleep) queryOrderBy = orderBy(\"updated_at\");\n            else if (this.state.query.filter === Status.Awake) queryOrderBy = orderBy(\"updated_at\");\n            else if (this.state.query.filter === Status.Found) queryOrderBy = orderBy(\"output\");\n            else queryOrderBy = orderBy(\"id\");\n\n            let queryStart = null;\n            if (this.state.query.page === 1) queryStart = startAt(1);\n            else queryStart = startAfter((this.state.query.page - 1) * this.state.query.perPage);\n\n            let queryLimit = limit(this.state.query.perPage);\n\n            let queryString = null;\n            if (!IsEmpty(this.state.query.search) || !IsEmpty(this.state.query.filter)) queryString = query(this.state.collection, queryWhere, queryOrderBy, queryStart, queryLimit);\n            else queryString = query(this.state.collection, queryOrderBy, queryStart, queryLimit);\n\n            getDocs(queryString).then((snapshot) => {\n                this.setState({\n                    data: []\n                }, () => {\n                    this.setState({\n                        data: snapshot.docs.map(value => value.data()),\n                        listener: onSnapshot(queryString, (snapshotListener) => {\n                            this.setState({\n                                data: []\n                            }, () => {\n                                this.setState({\n                                    data: snapshotListener.docs.map(value => value.data())\n                                }, () => {\n                                    if (this.state.modalDetail) {\n                                        let find = snapshotListener.docs.find(value => value.id.toString() === this.state.dataDetail.id.toString());\n                                        if (!IsEmpty(find)) this.setState({\n                                            dataDetail: find.data()\n                                        });\n                                    }\n                                });\n                            });\n                        })\n                    });\n                });\n            }).catch((error) => {\n                console.error(\"getData\", error.message);\n            }).finally(() => {\n                this.setValue(\"loading\", false);\n            });\n        });\n    }\n    getLastData(callback = null) {\n        getDocs(query(\n            this.state.collection,\n            orderBy(\"id\", \"desc\"),\n            limit(1)\n        )).then((snapshot) => {\n            let data = {...this.state.lastData};\n            snapshot.docs.map(value => data = value.data());\n            this.setValue(\"lastData\", data, () => typeof callback === \"function\" && callback(data, null));\n        }).catch((error) => {\n            if (typeof callback === \"function\") callback(null, error);\n        }).finally(() => {});\n    }\n\n    onPageChange(event, newPage) {\n        this.setState({\n            query: update(this.state.query, {\n                page: {$set: newPage}\n            })\n        }, () => {\n            this.generateQuery();\n        });\n    }\n    onRowPerPageChange(event) {\n        this.setState({\n            query: update(this.state.query, {\n                perPage: {$set: event.target.value},\n                page: {$set: 1}\n            })\n        }, () => {\n            this.generateQuery();\n        });\n    }\n    generateQuery() {\n        let query = \"\";\n        if (!IsEmpty(this.state.query.search)) {\n            query += `&search=${this.state.query.search}`;\n        }\n        if (!IsEmpty(this.state.query.filter)) {\n            query += `&filter=${this.state.query.filter}`;\n        }\n        if (!IsEmpty(this.state.query.perPage)) {\n            query += `&perPage=${this.state.query.perPage}`;\n        }\n        if (!IsEmpty(this.state.query.page)) {\n            query += `&page=${this.state.query.page}`;\n        }\n        query = query.substring(1);\n        this.props.navigate(`${Config.Links.Home}?${query}`);\n    }\n\n    render() {\n        return (\n            <Template className=\"bgc-1A1E23\">\n                <Modal size={\"xl\"} show={this.state.modalDetail} onHide={() => this.setState({\n                    modalDetail: false,\n                    editing: false\n                })}>\n                    <Modal.Body className=\"data-detail\">\n                        <div className=\"small table-responsive pb-2 pb-sm-2 pb-md-0 pb-lg-0 pb-xl-0\">\n                            <table className=\"table table-borderless w-auto m-0\">\n                                <tbody>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">ID</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.id}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Email</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.email}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Protocol</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.protocol}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Domain</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.domain}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Platform</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.platform}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Platform Domain</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.platform_domain}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Status</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        {this.getStatusText(this.state.dataDetail)}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Start</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.start_crunch}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">End</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.end_crunch}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Last</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.last_crunch}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Version</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.version}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">Command</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"middle\" className=\"p-0\">\n                                        <p className=\"m-0\">{this.state.dataDetail.command}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td valign=\"top\" className=\"p-0\">\n                                        <p className=\"m-0\">Output</p>\n                                    </td>\n                                    <td valign=\"top\" className=\"p-0\">\n                                        <p className=\"m-0 px-1\">:</p>\n                                    </td>\n                                    <td valign=\"top\" className=\"p-0\">\n                                        {this.state.canSeeOutput ? <>\n                                            {this.state.dataDetail.output.length > 0 ? this.state.dataDetail.output.map((value, index) => (\n                                                <p key={index} className=\"m-0\">{value}</p>\n                                            )) : <p className=\"m-0\">-</p>}\n                                        </> : <LoadingButton\n                                            size={\"small\"}\n                                            color={\"success\"}\n                                            loading={this.state.loading}\n                                            variant={\"outlined\"}\n                                            className=\"p-0\"\n                                            onClick={(event) => this.seeOutput()}\n                                        >See</LoadingButton>}\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"mt-3\">\n                            <Collapse in={this.state.editing}>\n                                <TextField\n                                    type={\"email\"}\n                                    label=\"Email *\"\n                                    size={\"small\"}\n                                    className=\"w-100\"\n                                    error={this.state.editError.email}\n                                    value={this.state.edit.email}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        email: {$set: event.target.value}\n                                    }))}\n                                />\n                                <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                    <InputLabel id=\"edit-protocol\">Protocol *</InputLabel>\n                                    <Select\n                                        labelId=\"edit-protocol\"\n                                        error={this.state.editError.protocol}\n                                        value={this.state.edit.protocol}\n                                        onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                            protocol: {$set: event.target.value}\n                                        }))}\n                                        defaultValue={Protocol.Https}\n                                    >\n                                        {Object.keys(Protocol).map(protocol => (\n                                            <MenuItem value={Protocol[protocol]}>{Protocol[protocol]}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                                <TextField\n                                    label=\"Domain *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.domain}\n                                    value={this.state.edit.domain}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        domain: {$set: event.target.value}\n                                    }))}\n                                />\n                                <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                    <InputLabel id=\"edit-platform\">Platform *</InputLabel>\n                                    <Select\n                                        labelId=\"edit-platform\"\n                                        error={this.state.editError.platform}\n                                        value={this.state.edit.platform}\n                                        onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                            platform: {$set: event.target.value},\n                                            platform_domain: {$set: Platform[this.platformSearchObject(event.target.value)].domain}\n                                        }))}\n                                        defaultValue={Platform.InfinityFree.name}\n                                    >\n                                        {Object.keys(Platform).map(platform => (\n                                            <MenuItem value={Platform[platform].name}>{Platform[platform].name}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                                <TextField\n                                    label=\"Platform Domain *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.platform_domain}\n                                    value={this.state.edit.platform_domain}\n                                    /*onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        platform_domain: {$set: event.target.value}\n                                    }))}*/\n                                    disabled\n                                />\n                                <TextField\n                                    label=\"Start Crunch *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.start_crunch}\n                                    value={this.state.edit.start_crunch}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        start_crunch: {$set: event.target.value}\n                                    }))}\n                                />\n                                <TextField\n                                    label=\"End Crunch *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.end_crunch}\n                                    value={this.state.edit.end_crunch}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        end_crunch: {$set: event.target.value}\n                                    }))}\n                                />\n                                <TextField\n                                    label=\"Last Crunch *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.last_crunch}\n                                    value={this.state.edit.last_crunch}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        last_crunch: {$set: event.target.value}\n                                    }))}\n                                />\n                                <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                    <InputLabel id=\"edit-version\">Version *</InputLabel>\n                                    <Select\n                                        labelId=\"edit-version\"\n                                        error={this.state.editError.version}\n                                        value={this.state.edit.version}\n                                        onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                            version: {$set: event.target.value}\n                                        }))}\n                                        defaultValue={Version.V1}\n                                    >\n                                        {Object.keys(Version).map(version => (\n                                            <MenuItem value={Version[version]}>{Version[version]}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                                <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                    <InputLabel id=\"edit-status\">Status *</InputLabel>\n                                    <Select\n                                        labelId=\"edit-status\"\n                                        value={this.state.edit.status}\n                                        onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                            status: {$set: event.target.value}\n                                        }))}\n                                        defaultValue={Status.NotDeployed}\n                                    >\n                                        {Object.keys(Status).map(status => (\n                                            <MenuItem value={Status[status]}>{UcFirst(Status[status].replaceAll(\"_\", \" \"))}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                                <TextField\n                                    id=\"edit-command\"\n                                    label=\"Command *\"\n                                    size={\"small\"}\n                                    className=\"w-100 mt-3\"\n                                    error={this.state.editError.command}\n                                    value={this.state.edit.command}\n                                    onChange={(event) => this.setValue(\"edit\", update(this.state.edit, {\n                                        command: {$set: event.target.value}\n                                    }))}\n                                />\n                                <div className=\"mt-2\">\n                                    {this.commandAttributes.map((value, index) => (\n                                        <button className={`btn btn-sm border-1F1E30 ${index !== 0 && \"ms-2\"}`} onClick={event => {\n                                            this.setValue(\"edit\", update(this.state.edit, {\n                                                command: {$set: this.appendToCursorPosition(\"edit-command\", value.value)}\n                                            }));\n                                        }}>{value.label}</button>\n                                    ))}\n                                </div>\n                            </Collapse>\n                        </div>\n                        <div className=\"mt-3\">\n                            <Collapse in={this.state.deleting}>\n                                <TextField\n                                    label=\"Type the domain *\"\n                                    size={\"small\"}\n                                    className=\"w-100\"\n                                    error={this.state.deleteError}\n                                    value={this.state.delete}\n                                    onChange={(event) => this.setValue(\"delete\", event.target.value)}\n                                />\n                            </Collapse>\n                        </div>\n                        <div className=\"text-center mt-3\">\n                            {this.state.editing ?\n                                <>\n                                    <LoadingButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        loading={this.state.loading}\n                                        variant={\"contained\"}\n                                        onClick={(event) => this.edit()}\n                                    >Save</LoadingButton>\n                                    <button className=\"btn btn-sm btn-secondary px-3 ms-3\" onClick={(event) => this.setValue(\"editing\", false)}>Cancel</button>\n                                </> :\n                                <button className=\"btn btn-sm text-white bgc-FFA500 px-4\" onClick={(event) => this.setState({\n                                    editing: true,\n                                    deleting: false,\n                                    edit: this.state.dataDetail\n                                })}>Edit</button>\n                            }\n                            <button className=\"btn btn-sm text-white bgc-1F1E30 px-4 mx-3\" onClick={(event) => this.setState({\n                                modalDetail: false,\n                                editing: false\n                            })}>Close</button>\n                            {this.state.deleting ?\n                                <LoadingButton\n                                    size={\"small\"}\n                                    color={\"error\"}\n                                    loading={this.state.loading}\n                                    variant={\"contained\"}\n                                    onClick={(event) => this.delete()}\n                                >Delete</LoadingButton> :\n                                <button className=\"btn btn-sm btn-danger px-4\" onClick={(event) => this.setState({\n                                    deleting: true,\n                                    editing: false\n                                })}>Delete</button>\n                            }\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                <Modal size={\"xl\"} show={this.state.modalAdd} onHide={() => this.setValue(\"modalAdd\", false)}>\n                    <Modal.Body className=\"data-detail\">\n                        <h6 className=\"m-0\">Add New Domain</h6>\n                        <div className=\"modal-add-fields overflow-auto\">\n                            {this.state.add.map((value, index, array) => (\n                                <div className=\"mt-3\" key={index}>\n                                    <Divider>\n                                        <Chip label={`Item ${index + 1}`} />\n                                    </Divider>\n                                    <TextField\n                                        type={\"email\"}\n                                        label=\"Email *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].email}\n                                        value={value.email}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                email: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                        <InputLabel id=\"add-protocol\">Protocol *</InputLabel>\n                                        <Select\n                                            labelId=\"add-protocol\"\n                                            error={this.state.addError[index].protocol}\n                                            value={value.protocol}\n                                            onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                                [index]: {\n                                                    protocol: {$set: event.target.value}\n                                                }\n                                            }))}\n                                            defaultValue={Protocol.Https}\n                                        >\n                                            {Object.keys(Protocol).map(protocol => (\n                                                <MenuItem value={Protocol[protocol]}>{Protocol[protocol]}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                    <TextField\n                                        label=\"Domain *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].domain}\n                                        value={value.domain}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                domain: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                        <InputLabel id=\"add-platform\">Platform *</InputLabel>\n                                        <Select\n                                            labelId=\"add-platform\"\n                                            error={this.state.addError[index].platform}\n                                            value={value.platform}\n                                            onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                                [index]: {\n                                                    platform: {$set: event.target.value},\n                                                    platform_domain: {$set: Platform[this.platformSearchObject(event.target.value)].domain}\n                                                }\n                                            }))}\n                                            defaultValue={Platform.InfinityFree.name}\n                                        >\n                                            {Object.keys(Platform).map(platform => (\n                                                <MenuItem value={Platform[platform].name}>{Platform[platform].name}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                    <TextField\n                                        label=\"Platform Domain *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].platform_domain}\n                                        value={value.platform_domain}\n                                        /*onChange={(event) => this.setValue(\"add\", update(this.state.edit, {\n                                            [index]: {\n                                                platform_domain: {$set: event.target.value}\n                                            }\n                                        }))}*/\n                                        disabled\n                                    />\n                                    <TextField\n                                        label=\"Start Crunch *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].start_crunch}\n                                        value={value.start_crunch}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                start_crunch: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <TextField\n                                        label=\"End Crunch *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].end_crunch}\n                                        value={value.end_crunch}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                end_crunch: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <TextField\n                                        label=\"Last Crunch *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].last_crunch}\n                                        value={value.last_crunch}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                last_crunch: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <FormControl fullWidth size={\"small\"} className=\"mt-3\">\n                                        <InputLabel id=\"add-version\">Version *</InputLabel>\n                                        <Select\n                                            labelId=\"add-version\"\n                                            error={this.state.addError[index].version}\n                                            value={value.version}\n                                            onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                                [index]: {\n                                                    version: {$set: event.target.value}\n                                                }\n                                            }))}\n                                            defaultValue={Version.V1}\n                                        >\n                                            {Object.keys(Version).map(version => (\n                                                <MenuItem value={Version[version]}>{Version[version]}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                    <TextField\n                                        id={`add-command-${index}`}\n                                        label=\"Command *\"\n                                        size={\"small\"}\n                                        className=\"w-100 mt-3\"\n                                        error={this.state.addError[index].command}\n                                        value={value.command}\n                                        onChange={(event) => this.setValue(\"add\", update(this.state.add, {\n                                            [index]: {\n                                                command: {$set: event.target.value}\n                                            }\n                                        }))}\n                                    />\n                                    <div className=\"mt-2\">\n                                        {this.commandAttributes.map((value1, index1) => (\n                                            <button className={`btn btn-sm border-1F1E30 ${index1 !== 0 && \"ms-2\"}`} onClick={event => {\n                                                this.setValue(\"add\", update(this.state.add, {\n                                                    [index]: {\n                                                        command: {$set: this.appendToCursorPosition(`add-command-${index}`, value1.value)}\n                                                    }\n                                                }));\n                                            }}>{value1.label}</button>\n                                        ))}\n                                    </div>\n                                    {this.state.add.length > 1 && <button className=\"btn btn-sm btn-danger px-4 mt-3\" onClick={(event) => this.setState({\n                                        add: update(this.state.add, {\n                                            $splice: [[index, 1]]\n                                        }),\n                                        addError: update(this.state.addError, {\n                                            $splice: [[index, 1]]\n                                        })\n                                    })}>-Delete</button>}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"mt-3\">\n                            <button className=\"btn btn-sm text-white bgc-1F1E30 px-4\" onClick={(event) => this.setState({\n                                add: update(this.state.add, {\n                                    $push: [this.addFields]\n                                }),\n                                addError: update(this.state.addError, {\n                                    $push: [this.errorFields]\n                                })\n                            })}>+Add</button>\n                        </div>\n                        <div className=\"text-center mt-5\">\n                            <button className=\"btn btn-sm text-white bgc-1F1E30 px-4\" onClick={(event) => this.setValue(\"modalAdd\", false)}>Close</button>\n                            <LoadingButton\n                                size={\"small\"}\n                                color={\"primary\"}\n                                loading={this.state.loading}\n                                variant={\"contained\"}\n                                onClick={(event) => this.add()}\n                                className=\"ms-2 px-4\"\n                            >Add</LoadingButton>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                <BgForest className=\"app-content\">\n                    {this.state.loading && <LinearProgress />}\n                    <div className=\"py-3\">\n                        <div className=\"container\">\n                            <div className=\"rounded d-flex box-shadow-primary bgc-white-opacity-95 hc-pagination px-3 py-2\">\n                                <FormControl size={\"small\"} sx={{minWidth: 100}}>\n                                    <InputLabel id=\"query-filter\">Filter</InputLabel>\n                                    <Select\n                                        labelId=\"query-filter\"\n                                        value={this.state.query.filter}\n                                        onChange={(event) => this.setValue(\"query\", update(this.state.query, {\n                                            search: {$set: \"\"},\n                                            filter: {$set: event.target.value}\n                                        }), () => this.generateQuery())}\n                                        autoWidth\n                                    >\n                                        <MenuItem value=\"\"><em>None</em></MenuItem>\n                                        {Object.keys(Status).map(status => (\n                                            <MenuItem value={Status[status]}>{UcFirst(Status[status].replaceAll(\"_\", \" \"))}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                                {/*<LoadingButton\n                                    color={\"info\"}\n                                    loading={this.state.loading}\n                                    variant={\"contained\"}\n                                    onClick={(event) => this.reMigrate()}\n                                    className=\"ms-2 white-space-nowrap\"\n                                >Re-migrate</LoadingButton>*/}\n                                <TextField\n                                    label=\"Search by Domain/Email\"\n                                    size={\"small\"}\n                                    className=\"w-100 ms-2\"\n                                    value={this.state.query.search}\n                                    onChange={(event) => this.setValue(\"query\", update(this.state.query, {\n                                        search: {$set: event.target.value},\n                                        filter: {$set: \"\"}\n                                    }))}\n                                />\n                                <LoadingButton\n                                    color={\"success\"}\n                                    loading={this.state.loading}\n                                    variant={\"outlined\"}\n                                    onClick={(event) => this.onPageChange(event, 1)}\n                                    className=\"ms-2\"\n                                >Search</LoadingButton>\n                                <LoadingButton\n                                    color={\"primary\"}\n                                    variant={\"contained\"}\n                                    onClick={(event) => this.setValue(\"modalAdd\", true)}\n                                    className=\"ms-2 white-space-nowrap\"\n                                >Add New</LoadingButton>\n                            </div>\n                            <div className=\"row\">\n                                {this.state.data.map((value, index, array) => (\n                                    <div key={index} className=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-3\">\n                                        <div className=\"small rounded box-shadow-primary bgc-white-opacity-95 table-responsive p-3 mt-3\">\n                                            <table className=\"table table-borderless m-0\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">Domain</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0 px-1\">:</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">{value.domain}</p>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">Platform</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0 px-1\">:</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">{value.platform}</p>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0\">Status</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            <p className=\"m-0 px-1\">:</p>\n                                                        </td>\n                                                        <td valign=\"middle\" className=\"p-0\">\n                                                            {this.getStatusText(value)}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                            <div className=\"row gx-2 mt-2\">\n                                                <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\n                                                    <button className=\"btn btn-sm btn-secondary w-100\" onClick={(event) => this.setValue(\"dataDetail\", value, () => this.setValue(\"modalDetail\", true))}>Info</button>\n                                                </div>\n                                                <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 mt-2 mt-sm-2 mt-md-0 mt-lg-0 mt-xl-0\">\n                                                    {value.status === Status.NotDeployed ?\n                                                        <button className=\"btn btn-sm bgc-1C152D text-white w-100\" onClick={(event) => this.awake(value)}>Start</button> :\n                                                        <button className=\"btn btn-sm bgc-1C152D text-white w-100\" onClick={(event) => this.awake(value)} disabled={!this.isSleep(value)}>Awake</button>\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <div className=\"d-flex justify-content-center mt-3\">\n                                <div className=\"rounded box-shadow-primary bgc-white-opacity-95 hc-pagination\">\n                                    <TablePagination\n                                        count={this.state.lastData.id}\n                                        page={this.state.query.page - 1}\n                                        onPageChange={(event, newPage) => this.onPageChange(event, newPage + 1)}\n                                        rowsPerPage={this.state.query.perPage}\n                                        onRowsPerPageChange={(event) => this.onRowPerPageChange(event)}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </BgForest>\n            </Template>\n        );\n    }\n}\n\nHome.contextType = Web3Context;\n\nexport default Home;","import React, {PureComponent} from \"react\";\nimport {BrowserRouter, Routes, Route, Outlet, Link} from \"react-router-dom\";\nimport RouteElement from \"./helpers/RouteElement\";\nimport Config from \"./configs/Config\";\nimport NotFound from \"./pages/NotFound\";\nimport Home from \"./pages/Home\";\n\nclass AppRoutes extends PureComponent {\n    render() {\n        return (\n            <BrowserRouter>\n                <Routes>\n                    <Route path={Config.Routers.Home} element={<RouteElement component={Home} />} />\n                    <Route path={Config.Routers.Teams.Index} element={<Outlet />}>\n                        <Route index element={<div>\n                            <h1>Teams</h1>\n                            <Link to={Config.Links.Teams.Havea}>Go to Havea</Link>\n                        </div>} />\n                        <Route path={Config.Routers.Teams.Havea} element={<div>\n                            <h1>Havea</h1>\n                            <Link to={Config.Links.Teams.Index}>Back</Link>\n                        </div>} />\n                    </Route>\n                    <Route path={Config.Routers.NotFound} element={<RouteElement component={NotFound} />} />\n                </Routes>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default AppRoutes;","import React, {PureComponent} from \"react\";\nimport AppRoutes from \"./AppRoutes\";\nimport Web3 from \"web3\";\nimport TruffleContract from \"@truffle/contract\";\nimport Web3Context from \"./contexts/Web3Context\";\nimport IsEmpty from \"./helpers/IsEmpty\";\nimport Kaytrin from \"./contracts/Kaytrin.json\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min\";\n\nclass App extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.initialState = {\n            loading: true,\n            web3: null,\n            newBlockHeadersSubscription: null,\n            account: \"\",\n            primaryBalance: 0,\n            kaytrin: null,\n            loadWeb3: () => false\n        };\n        this.state = {\n            ...this.initialState\n        };\n        this.loadWeb3 = this.loadWeb3.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            loadWeb3: this.loadWeb3\n        }, () => this.loadWeb3());\n    }\n\n    loadWeb3() {\n        this.setLoading(true, () => {\n            let web3 = null;\n            if (!IsEmpty(window.ethereum)) {\n                web3 = new Web3(window.ethereum);\n                this.setState({\n                    web3: web3\n                }, () => {\n                    window.ethereum.request({method: \"eth_requestAccounts\"}).then((accounts) => {\n                        this.getAccounts(accounts);\n                        this.getListeners();\n                    }).catch((error) => {\n                        this.errorGettingAccounts();\n                    }).finally(() => {});\n                });\n            } else if (!IsEmpty(window.web3)) {\n                web3 = new Web3(window.web3.currentProvider);\n                this.setState({\n                    web3: web3\n                }, () => {\n                    if (!IsEmpty(window.ethereum)) {\n                        window.ethereum.enable().then((accounts) => {\n                            this.getAccounts(accounts);\n                            this.getListeners();\n                        }).catch((error) => {\n                            this.errorGettingAccounts();\n                        }).finally(() => {});\n                    }\n                });\n            } else {\n                this.setLoading(false);\n                window.alert(\"Non-Ethereum browser detected. You should consider tyring Metamask!\");\n            }\n        });\n    }\n\n    getAccounts(accounts) {\n        if (!IsEmpty(accounts)) {\n            this.setState({\n                account: accounts[0]\n            }, () => {\n                this.getPrimaryBalance();\n            });\n        } else {\n            this.setState({\n                ...this.initialState\n            });\n        }\n    }\n\n    getPrimaryBalance() {\n        if (!IsEmpty(this.state.account)) {\n            this.state.web3.eth.getBalance(this.state.account).then((balance) => {\n                this.setState({\n                    primaryBalance: balance\n                }, () => {\n                    this.getBlockchainData();\n                });\n            }).catch((error) => {\n                console.error(error);\n            }).finally(() => {\n                this.setLoading(false);\n            });\n        }\n    }\n\n    listenAccountChanges() {\n        if (!IsEmpty(window.ethereum)) {\n            window.ethereum.on(\"accountsChanged\", (accounts) => {\n                this.getAccounts(accounts);\n            });\n        }\n    }\n\n    listenChainChanges() {\n        if (!IsEmpty(window.ethereum)) {\n            window.ethereum.on(\"chainChanged\", (chainId) => {\n                this.getBlockchainData();\n            });\n        }\n    }\n\n    listenNewBlockHeaders() {\n        let newBlockHeadersSubscription = this.state.web3.eth.subscribe(\"newBlockHeaders\", (error, blockHeader) => {\n            if (IsEmpty(error)) {\n                this.getPrimaryBalance();\n            } else {\n                console.error(error);\n            }\n        }).on(\"connected\", (subscriptionId) => {\n            //\n        }).on(\"data\", (data) => {\n            //\n        }).on(\"error\", (error) => {\n            console.error(error);\n        });\n        this.setState({\n            newBlockHeadersSubscription: newBlockHeadersSubscription\n        });\n    }\n\n    errorGettingAccounts() {\n        console.error(\"Error getting account.\");\n        this.setLoading(false);\n    }\n\n    getListeners() {\n        this.listenAccountChanges();\n        this.listenChainChanges();\n        this.listenNewBlockHeaders();\n    }\n\n    getBlockchainData() {\n        this.loadKaytrin();\n    }\n\n    setLoading(value, callback) {\n        this.setState({\n            loading: value\n        }, () => {\n            if (!IsEmpty(callback) && typeof callback === \"function\") callback();\n        });\n    }\n\n    loadKaytrin() {\n        const kaytrin = TruffleContract(Kaytrin);\n        kaytrin.setProvider(this.state.web3.currentProvider);\n        this.setState({\n            kaytrin: kaytrin\n        });\n    }\n\n    render() {\n        return (\n            <Web3Context.Provider value={this.state}>\n                <AppRoutes />\n            </Web3Context.Provider>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}